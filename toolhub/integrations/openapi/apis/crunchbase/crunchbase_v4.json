{
    "openapi": "3.0.3",
    "info": {
        "title": "Crunchbase Enterprise API",
        "description": "Crunchbase Enterprise API, 2021-07-16",
        "version": "1.0.3",
        "termsOfService": "https://data.crunchbase.com/docs/terms"
    },
    "servers": [{ "url": "https://api.crunchbase.com/api/v4" }],
    "externalDocs": {
        "url": "https://data.crunchbase.com/docs",
        "description": "API Reference doc"
    },
    "security": [{ "ApiKeyAuthHeader": [] }],
    "tags": [
        { "name": "Autocomplete" },
        { "name": "Deleted Entities" },
        { "name": "Entity" },
        { "name": "Search" }
    ],
    "paths": {
        "/autocompletes": {
            "get": {
                "summary": "Suggests matching Identifier entities based on the query and entity_def_ids provided.",
                "tags": ["Autocomplete"],
                "parameters": [
                    {
                        "name": "query",
                        "description": "Value to perform the autocomplete search with.",
                        "in": "query",
                        "required": true,
                        "schema": { "type": "string" }
                    },
                    {
                        "name": "collection_ids",
                        "description": "A comma separated list of collection ids to search against. Leaving this blank means it will search across\nall identifiers. Entity defs can be constrained to specific facets by providing them as facet collections.\nRelationship collections will resolve to their underlying entity def. \\\nCollection ids are: organizations, people, funding_rounds, acquisitions, investments, events,\npress_references, funds, event_appearances, ipos, ownerships, categories, category_groups, locations, jobs\n",
                        "in": "query",
                        "schema": { "type": "string" }
                    },
                    {
                        "name": "limit",
                        "description": "Number of results to retrieve; default = 10, max = 25",
                        "in": "query",
                        "schema": { "type": "integer" }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AutocompleteResult"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/deleted_entities": {
            "get": {
                "summary": "Retrieve deleted entities",
                "tags": ["Deleted Entities"],
                "parameters": [
                    {
                        "name": "collection_ids",
                        "description": "Filter by collection id(s). Comma separated list of collection ids.\\\nE.g. organizations, people, funding_rounds, acquisitions, investments, events, press_references, funds,\nevent_appearances, ipos, ownerships, categories, category_groups, locations, jobs\n",
                        "in": "query",
                        "schema": { "type": "string" }
                    },
                    {
                        "name": "before_id",
                        "description": "Used to paginate search results to the previous page. before_id should be the uuid of the first item in\nthe current page. May not be provided simultaneously with after_id.\n",
                        "in": "query",
                        "schema": { "type": "string", "format": "uuid" }
                    },
                    {
                        "name": "after_id",
                        "description": "Used to paginate search results to the next page. after_id should be the uuid of the last item in\nthe current page. May not be provided simultaneously with before_id.\n",
                        "in": "query",
                        "schema": { "type": "string", "format": "uuid" }
                    },
                    {
                        "name": "limit",
                        "description": "Number of rows to return. Default is 100, min is 1, max is 2000.",
                        "in": "query",
                        "schema": { "type": "integer" }
                    },
                    {
                        "name": "deleted_at_order",
                        "description": "Direction of sorting by deleted_at property",
                        "in": "query",
                        "schema": { "type": "string", "enum": ["asc", "desc"] }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DeletedEntitiesResult"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/deleted_entities/{collection_id}": {
            "get": {
                "summary": "Retrieve deleted entities for a collection id",
                "tags": ["Deleted Entities"],
                "parameters": [
                    {
                        "name": "collection_id",
                        "description": "Filter by collection id. E.g. organizations, people, funding_rounds, acquisitions, investments, events,\npress_references, funds, event_appearances, ipos, ownerships, categories, category_groups, locations, jobs\n",
                        "in": "path",
                        "required": true,
                        "schema": { "type": "string" }
                    },
                    {
                        "name": "before_id",
                        "description": "Used to paginate search results to the previous page. before_id should be the uuid of the first item in\nthe current page. May not be provided simultaneously with after_id.\n",
                        "in": "query",
                        "schema": { "type": "string", "format": "uuid" }
                    },
                    {
                        "name": "after_id",
                        "description": "Used to paginate search results to the next page. after_id should be the uuid of the last item in\nthe current page. May not be provided simultaneously with before_id.\n",
                        "in": "query",
                        "schema": { "type": "string", "format": "uuid" }
                    },
                    {
                        "name": "limit",
                        "description": "Number of rows to return. Default is 100, min is 1, max is 2000.",
                        "in": "query",
                        "schema": { "type": "integer" }
                    },
                    {
                        "name": "deleted_at_order",
                        "description": "Direction of sorting by deleted_at property",
                        "in": "query",
                        "schema": { "type": "string", "enum": ["asc", "desc"] }
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DeletedEntitiesResult"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/organizations": {
            "post": {
                "summary": "Search Organization Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            },
                            "examples": {
                                "example1": {
                                    "summary": "Companies in Europe with funding total between 25m and 100m USD",
                                    "value": {
                                        "field_ids": [
                                            "identifier",
                                            "categories",
                                            "location_identifiers",
                                            "short_description",
                                            "rank_org"
                                        ],
                                        "order": [
                                            {
                                                "field_id": "rank_org",
                                                "sort": "asc"
                                            }
                                        ],
                                        "query": [
                                            {
                                                "type": "predicate",
                                                "field_id": "funding_total",
                                                "operator_id": "between",
                                                "values": [
                                                    {
                                                        "value": 25000000,
                                                        "currency": "usd"
                                                    },
                                                    {
                                                        "value": 100000000,
                                                        "currency": "usd"
                                                    }
                                                ]
                                            },
                                            {
                                                "type": "predicate",
                                                "field_id": "location_identifiers",
                                                "operator_id": "includes",
                                                "values": [
                                                    "6106f5dc-823e-5da8-40d7-51612c0b2c4e"
                                                ]
                                            },
                                            {
                                                "type": "predicate",
                                                "field_id": "facet_ids",
                                                "operator_id": "includes",
                                                "values": ["company"]
                                            }
                                        ],
                                        "limit": 50
                                    }
                                },
                                "example2": {
                                    "summary": "Biotech companies with number of employees between 101 and 250",
                                    "value": {
                                        "field_ids": [
                                            "identifier",
                                            "categories",
                                            "location_identifiers",
                                            "short_description",
                                            "rank_org"
                                        ],
                                        "order": [
                                            {
                                                "field_id": "rank_org",
                                                "sort": "asc"
                                            }
                                        ],
                                        "query": [
                                            {
                                                "type": "predicate",
                                                "field_id": "num_employees_enum",
                                                "operator_id": "includes",
                                                "values": ["c_00101_00250"]
                                            },
                                            {
                                                "type": "predicate",
                                                "field_id": "categories",
                                                "operator_id": "includes",
                                                "values": [
                                                    "58842728-7ab9-5bd1-bb67-e8e55f6520a0"
                                                ]
                                            }
                                        ],
                                        "limit": 50
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OrganizationSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/organizations/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Organization: [acquiree_acquisitions, acquirer_acquisitions, child_organizations, child_ownerships, event_appearances, fields, founders, headquarters_address, investors, ipos, jobs, key_employee_changes, layoffs, parent_organization, parent_ownership, participated_funding_rounds, participated_funds, participated_investments, press_references, raised_funding_rounds, raised_funds, raised_investments]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Organization",
                "responses": {
                    "200": {
                        "description": "Single Organization result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationEntity"
                                },
                                "examples": {
                                    "example": {
                                        "$ref": "#/components/examples/OrganizationLookupResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/organizations/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Organization's single card",
                "responses": {
                    "200": {
                        "description": "Single Organization with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationEntity"
                                },
                                "examples": {
                                    "example": {
                                        "$ref": "#/components/examples/OrganizationCardLookupResponseExample"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/people": {
            "post": {
                "summary": "Search Person Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PersonSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/people/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Person: [degrees, event_appearances, fields, founded_organizations, jobs, participated_funding_rounds, participated_funds, participated_investments, partner_funding_rounds, partner_investments, press_references, primary_job, primary_organization]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Person",
                "responses": {
                    "200": {
                        "description": "Single Person result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/people/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Person's single card",
                "responses": {
                    "200": {
                        "description": "Single Person with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PersonEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/funding_rounds": {
            "post": {
                "summary": "Search Funding Round Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FundingRoundSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/funding_rounds/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Funding Round: [fields, investments, investors, lead_investors, organization, partners, press_references]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Funding Round",
                "responses": {
                    "200": {
                        "description": "Single Funding Round result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FundingRoundEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/funding_rounds/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Funding Round's single card",
                "responses": {
                    "200": {
                        "description": "Single Funding Round with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FundingRoundEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/acquisitions": {
            "post": {
                "summary": "Search Acquisition Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AcquisitionSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/acquisitions/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Acquisition: [acquiree_organization, acquirer_organization, fields, press_references]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Acquisition",
                "responses": {
                    "200": {
                        "description": "Single Acquisition result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcquisitionEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/acquisitions/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Acquisition's single card",
                "responses": {
                    "200": {
                        "description": "Single Acquisition with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AcquisitionEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/investments": {
            "post": {
                "summary": "Search Investment Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/InvestmentSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/investments/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Investment: [fields, funding_round, investor, organization, partner]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Investment",
                "responses": {
                    "200": {
                        "description": "Single Investment result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvestmentEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/investments/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Investment's single card",
                "responses": {
                    "200": {
                        "description": "Single Investment with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InvestmentEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/events": {
            "post": {
                "summary": "Search Event Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EventSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/events/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Event: [address, appearances, contestants, exhibitors, fields, organizers, press_references, speakers, sponsors]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Event",
                "responses": {
                    "200": {
                        "description": "Single Event result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/events/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Event's single card",
                "responses": {
                    "200": {
                        "description": "Single Event with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/press_references": {
            "post": {
                "summary": "Search Press Reference Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PressReferenceSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/press_references/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Press Reference: [fields]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Press Reference",
                "responses": {
                    "200": {
                        "description": "Single Press Reference result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PressReferenceEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/press_references/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Press Reference's single card",
                "responses": {
                    "200": {
                        "description": "Single Press Reference with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PressReferenceEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/funds": {
            "post": {
                "summary": "Search Fund Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/FundSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/funds/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Fund: [fields, investors, owner, press_references]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Fund",
                "responses": {
                    "200": {
                        "description": "Single Fund result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FundEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/funds/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Fund's single card",
                "responses": {
                    "200": {
                        "description": "Single Fund with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FundEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/event_appearances": {
            "post": {
                "summary": "Search Event Appearance Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/EventAppearanceSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/event_appearances/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Event Appearance: [event, fields, participant]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Event Appearance",
                "responses": {
                    "200": {
                        "description": "Single Event Appearance result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventAppearanceEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/event_appearances/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Event Appearance's single card",
                "responses": {
                    "200": {
                        "description": "Single Event Appearance with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EventAppearanceEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/ipos": {
            "post": {
                "summary": "Search Ipo Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/IpoSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/ipos/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Ipo: [fields, organization, press_references]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Ipo",
                "responses": {
                    "200": {
                        "description": "Single Ipo result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IpoEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/ipos/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Ipo's single card",
                "responses": {
                    "200": {
                        "description": "Single Ipo with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IpoEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/ownerships": {
            "post": {
                "summary": "Search Ownership Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OwnershipSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/ownerships/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Ownership: [child_organization, fields, parent_organization, press_references]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Ownership",
                "responses": {
                    "200": {
                        "description": "Single Ownership result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OwnershipEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/ownerships/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Ownership's single card",
                "responses": {
                    "200": {
                        "description": "Single Ownership with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OwnershipEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/categories": {
            "post": {
                "summary": "Search Category Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CategorySearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/categories/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Category: [fields]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Category",
                "responses": {
                    "200": {
                        "description": "Single Category result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/categories/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Category's single card",
                "responses": {
                    "200": {
                        "description": "Single Category with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/category_groups": {
            "post": {
                "summary": "Search Category Group Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CategoryGroupSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/category_groups/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Category Group: [fields]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Category Group",
                "responses": {
                    "200": {
                        "description": "Single Category Group result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryGroupEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/category_groups/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Category Group's single card",
                "responses": {
                    "200": {
                        "description": "Single Category Group with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryGroupEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/locations": {
            "post": {
                "summary": "Search Location Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/LocationSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/locations/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Location: [fields]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Location",
                "responses": {
                    "200": {
                        "description": "Single Location result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/locations/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Location's single card",
                "responses": {
                    "200": {
                        "description": "Single Location with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/jobs": {
            "post": {
                "summary": "Search Job Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/JobSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/jobs/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Job: [fields, organization, person]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Job",
                "responses": {
                    "200": {
                        "description": "Single Job result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/jobs/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Job's single card",
                "responses": {
                    "200": {
                        "description": "Single Job with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/key_employee_changes": {
            "post": {
                "summary": "Search Key Employee Change Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/KeyEmployeeChangeSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/layoffs": {
            "post": {
                "summary": "Search Layoff Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/LayoffSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/addresses": {
            "post": {
                "summary": "Search Address Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/AddressSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/addresses/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Address: [event, fields, organization]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup an Address",
                "responses": {
                    "200": {
                        "description": "Single Address result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/addresses/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Address's single card",
                "responses": {
                    "200": {
                        "description": "Single Address with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddressEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/degrees": {
            "post": {
                "summary": "Search Degree Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/DegreeSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/degrees/{entity_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/fieldIdsParam" },
                {
                    "name": "card_ids",
                    "description": "Cards to include on the resulting entity - array of card_id strings in JSON encoded as string\\\\ Card Ids for Degree: [fields, organization, person]\n",
                    "in": "query",
                    "schema": { "type": "string" }
                }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup a Degree",
                "responses": {
                    "200": {
                        "description": "Single Degree result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DegreeEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/entities/degrees/{entity_id}/cards/{card_id}": {
            "parameters": [
                { "$ref": "#/components/parameters/entityIdParam" },
                { "$ref": "#/components/parameters/cardIdParam" },
                { "$ref": "#/components/parameters/cardFieldIdsParam" },
                { "$ref": "#/components/parameters/afterIdParam" },
                { "$ref": "#/components/parameters/beforeIdParam" },
                { "$ref": "#/components/parameters/orderParam" },
                { "$ref": "#/components/parameters/limitParam" }
            ],
            "get": {
                "tags": ["Entity"],
                "summary": "Lookup Degree's single card",
                "responses": {
                    "200": {
                        "description": "Single Degree with one card result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DegreeEntity"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        },
        "/searches/principals": {
            "post": {
                "summary": "Search Principal Entities.\nCan perform more complex filtering based on the query defined in the request body.\n",
                "tags": ["Search"],
                "requestBody": {
                    "description": "Search Query Parameters",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EntitySearch"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/PrincipalSearchResults"
                    },
                    "400": {
                        "$ref": "#/components/responses/GenericBadRequestError"
                    },
                    "404": {
                        "$ref": "#/components/responses/GenericNotFoundError"
                    },
                    "500": {
                        "$ref": "#/components/responses/GenericInternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "entityIdParam": {
                "name": "entity_id",
                "description": "UUID or permalink of desired entity",
                "in": "path",
                "required": true,
                "schema": { "type": "string" }
            },
            "fieldIdsParam": {
                "name": "field_ids",
                "description": "Fields to include on the resulting entity - either an array of field_id strings in JSON or a comma-separated list encoded as string",
                "in": "query",
                "schema": { "type": "string" }
            },
            "cardFieldIdsParam": {
                "name": "card_field_ids",
                "description": "Card fields to include on the specified card - array of field_id strings in JSON encoded as string",
                "in": "query",
                "schema": { "type": "string" }
            },
            "cardIdsParam": {
                "name": "card_ids",
                "description": "Cards to include on the resulting entity - either an array of card_id strings in JSON or a comma-separated list encoded as string",
                "in": "query",
                "schema": { "type": "string" }
            },
            "cardIdParam": {
                "name": "card_id",
                "description": "A card to include on the resulting entity",
                "in": "path",
                "required": true,
                "schema": { "type": "string" }
            },
            "afterIdParam": {
                "name": "after_id",
                "description": "Lookup uuid of the last item in the previous page (not required for first page). Used to iterate a card's\nresults starting at the beginning of the ordered set and moving forward. Suitable for implementing \"next page\"\nfunctionality. May not be provided simultaneously with before_id.\n",
                "in": "query",
                "schema": { "type": "string", "format": "uuid" }
            },
            "beforeIdParam": {
                "name": "before_id",
                "description": "Lookup uuid of the first item in the previous page (not required for first page). Used to iterate a card's\nresults starting at the end of the ordered set and moving backward. Suitable for implementing \"previous page\"\nfunctionality. May not be provided simultaneously with after_id.\n",
                "in": "query",
                "schema": { "type": "string", "format": "uuid" }
            },
            "orderParam": {
                "name": "order",
                "description": "Field name with order direction (asc/desc)",
                "in": "query",
                "schema": { "type": "string" }
            },
            "limitParam": {
                "name": "limit",
                "description": "Number of rows to return. Default is 100, min is 1, max is 100.",
                "in": "query",
                "schema": { "type": "integer" }
            }
        },
        "examples": {
            "OrganizationLookupResponseExample": {
                "value": {
                    "properties": {
                        "identifier": {
                            "uuid": "1dcf3d60-e7a2-95f0-0fbb-0c7a307184c0",
                            "value": "goBaby",
                            "image_id": "v1485305805/htbednnsfgdbm8zhd0zp.png",
                            "permalink": "gobaby-2",
                            "entity_def_id": "organization"
                        }
                    },
                    "cards": {
                        "press_references": [
                            {
                                "identifier": {
                                    "uuid": "89016b44-5723-4486-b102-5dd697bfa16e",
                                    "value": "The Global Association of Baby Equipment Rental Companies Partners with goBaby\n",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://www.prweb.com/releases/2018/02/prweb15165216.htm\n"
                                },
                                "posted_on": "2018-02-06",
                                "publisher": "PRWeb",
                                "created_at": "2018-02-06T19:02:54Z",
                                "updated_at": "2018-02-13T00:24:54Z"
                            },
                            {
                                "author": "Tishin Donkersley",
                                "identifier": {
                                    "uuid": "33539065-4f21-469c-8f00-607c705be105",
                                    "value": "Travel Made Easier with GoBaby, the Airbnb for Baby Gear",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "https://tech.co/travel-easier-gobaby-airbnb-baby-gear-2017-11"
                                },
                                "posted_on": "2017-11-16",
                                "publisher": "Tech Cocktail",
                                "thumbnail_url": "https://tech.co/wp-content/uploads/2017/11/pexels-photo-265987-baby-e1510847602971.jpeg",
                                "created_at": "2017-11-17T02:19:53Z",
                                "updated_at": "2018-02-13T00:06:39Z"
                            },
                            {
                                "author": "Dave Baldwin",
                                "identifier": {
                                    "uuid": "234383e5-2f1d-43dc-8b56-2ab389429ace",
                                    "value": "7 Apps to Save Mad Money on Toys, Kids’ Clothes, and Baby Gear",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "https://www.fatherly.com/gear/apps-to-save-money-on-toys-kids-clothing-and-baby-gear/\n"
                                },
                                "posted_on": "2017-09-21",
                                "publisher": "Fatherly",
                                "thumbnail_url": "https://images.fatherly.com/wp-content/uploads/2017/09/money-saving-apps.jpg?q=65&w=1200",
                                "created_at": "2017-10-30T16:51:44Z",
                                "updated_at": "2018-02-13T00:03:35Z"
                            },
                            {
                                "author": "Alicia Vitarelli",
                                "identifier": {
                                    "uuid": "19bb33f4-dd30-4f6a-b0fd-e039dcc104a6",
                                    "value": "What's the Deal: Make extra money while the kids nap",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://6abc.com/shopping/whats-the-deal-make-extra-money-while-the-kids-nap/1977008/\n"
                                },
                                "posted_on": "2017-05-10",
                                "publisher": "6abc Philadelphia",
                                "thumbnail_url": "http://cdn01.basis.net/78700/78659/62b2de02dbb03c54.jpg\n",
                                "created_at": "2017-10-30T16:51:44Z",
                                "updated_at": "2018-02-13T00:03:35Z"
                            },
                            {
                                "author": "rtyuliyageikhman",
                                "identifier": {
                                    "uuid": "a992d4a4-758c-48a3-b72f-82d947cafd6d",
                                    "value": "Must-Have App!: goBaby Lets You Rent Kid Gear Anywhere",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://redtri.com/new-york/must-have-app-gobaby-baby-gear-rental-service-for-travel/\n"
                                },
                                "posted_on": "2017-03-08",
                                "publisher": "Red Tricycle",
                                "thumbnail_url": "https://redtricom.files.wordpress.com/2017/02/4918265245_f61cbb57ac_z-e1488503567583.jpg?w=605&h=405",
                                "created_at": "2017-10-30T16:51:44Z",
                                "updated_at": "2018-02-13T00:03:35Z"
                            },
                            {
                                "author": "Laura Norman",
                                "identifier": {
                                    "uuid": "b7a41db0-2694-be6f-f590-0ca0e56de763",
                                    "value": "Pitch to Win: 3 Key Pointers from the Winner of the SMB Pitch Contest",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "https://www.salesforce.com/blog/2017/01/key-pitch-pointers.html\n"
                                },
                                "posted_on": "2017-01-17",
                                "thumbnail_url": "https://www.salesforce.com/content/dam/blogs/us/Jan2017/nataliekaminski.jpg\n",
                                "created_at": "2017-01-25T01:00:42Z",
                                "updated_at": "2018-02-12T21:39:09Z"
                            },
                            {
                                "author": "Beth Skwarecki",
                                "identifier": {
                                    "uuid": "2fad813e-d183-a750-f013-e7fa169ef15b",
                                    "value": "GoBaby Lets You Rent Strollers and Car Seats at Your Travel Destination\n",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://lifehacker.com/gobaby-lets-you-rent-strollers-and-car-seats-at-your-tr-1790626750\n"
                                },
                                "posted_on": "2016-12-30",
                                "publisher": "Life Hacker",
                                "thumbnail_url": "https://i.kinja-img.com/gawker-media/image/upload/s--ngdmGBg_--/c_fill,fl_progressive,g_center,h_900,q_80,w_1600/uyt66hu5pph4owj6eud3.png\n",
                                "created_at": "2017-01-25T00:58:54Z",
                                "updated_at": "2018-02-13T02:00:32Z"
                            },
                            {
                                "author": "Jennifer Jolly",
                                "identifier": {
                                    "uuid": "96db1443-72fe-a6f3-de01-418d74fe6e70",
                                    "value": "Last minute shopper: Here's a few shortcuts",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://www.usatoday.com/story/tech/columnist/2016/12/18/lost-holiday-haze-these-tech-tools-can-save-day/95443298/\n"
                                },
                                "posted_on": "2016-12-18",
                                "publisher": "USA Today Money",
                                "thumbnail_url": "http://www.gannett-cdn.com/-mm-/1ad90e5943ecc8d9aca78c788cc1c3a06bf5a586/c=0-31-704-429&r=x633&c=1200x630/local/-/media/2016/12/14/USATODAY/USATODAY/636173319777524673-MIN-006-HNY-001NEWYEAR-A-PZ.jpg",
                                "created_at": "2017-01-25T01:00:05Z",
                                "updated_at": "2018-02-12T21:26:05Z"
                            },
                            {
                                "author": "Dana Sitar",
                                "identifier": {
                                    "uuid": "69e1cf11-6a99-e0d0-86b6-6e92bfba88d0",
                                    "value": "Don’t Let That Old Stroller Collect Dust. Here’s How to Make Money With It\n",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://www.thepennyhoarder.com/gobaby-rent-baby-gear/\n"
                                },
                                "posted_on": "2016-12-12",
                                "publisher": "The Penny Hoarder",
                                "thumbnail_url": "http://cdn.thepennyhoarder.com/wp-content/uploads/2016/12/12110046/GettyImages-ChiccoDodiFC.jpg\n",
                                "created_at": "2017-01-25T00:59:31Z",
                                "updated_at": "2018-07-06T22:32:59Z"
                            }
                        ],
                        "event_appearances": [
                            {
                                "event_identifier": {
                                    "uuid": "17ab7994-5b11-3664-6200-3a2622db2a7d",
                                    "value": "Tech.Co Startup of the Year Competition",
                                    "image_id": "v1493156711/aiyngbfuwk3luugmytjs.jpg",
                                    "permalink": "tech-co-startup-of-the-year-competition-2017425\n",
                                    "entity_def_id": "event"
                                },
                                "name": "Tech.Co Startup of the Year Competition's contestant - goBaby",
                                "identifier": {
                                    "uuid": "7db06baa-6290-43ab-8569-778066ee3d2e",
                                    "value": "Tech.Co Startup of the Year Competition's contestant - goBaby",
                                    "permalink": "gobaby-2-contestant-tech-co-startup-of-the-year-competition-2017425--7db06baa\n",
                                    "entity_def_id": "event_appearance"
                                },
                                "event_starts_on": "2017-04-25",
                                "participant_identifier": {
                                    "uuid": "1dcf3d60-e7a2-95f0-0fbb-0c7a307184c0",
                                    "value": "goBaby",
                                    "image_id": "v1485305805/htbednnsfgdbm8zhd0zp.png",
                                    "permalink": "gobaby-2",
                                    "entity_def_id": "organization"
                                },
                                "created_at": "2017-10-30T16:37:30Z",
                                "updated_at": "2018-02-13T00:03:34Z",
                                "appearance_type": "contestant",
                                "event_location_identifiers": [
                                    {
                                        "uuid": "528f5e3c-90d1-1111-5d1c-2e4ff979d58e",
                                        "value": "San Francisco",
                                        "permalink": "san-francisco-california",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "eb879a83-c91a-121e-0bb8-829782dbcf04",
                                        "value": "California",
                                        "permalink": "california-united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "f110fca2-1055-99f6-996d-011c198b3928",
                                        "value": "United States",
                                        "permalink": "united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "b25caef9-a1b8-3a5d-6232-93b2dfb6a1d1",
                                        "value": "North America",
                                        "permalink": "north-america",
                                        "entity_def_id": "location"
                                    }
                                ]
                            },
                            {
                                "event_identifier": {
                                    "uuid": "4d6eab78-fb25-dac5-33ec-51fd8f329551",
                                    "value": "TechDay New York 2016",
                                    "image_id": "v1457601178/ei5chv8zhylujwetml9x.png",
                                    "permalink": "techday-new-york-2016-2016421",
                                    "entity_def_id": "event"
                                },
                                "name": "TechDay New York 2016's exhibitor - goBaby",
                                "identifier": {
                                    "uuid": "44ae6b7a-2a2c-4f24-a36b-66ee99084c08",
                                    "value": "TechDay New York 2016's exhibitor - goBaby",
                                    "permalink": "gobaby-2-exhibitor-techday-new-york-2016-2016421--44ae6b7a\n",
                                    "entity_def_id": "event_appearance"
                                },
                                "event_starts_on": "2016-04-21",
                                "participant_identifier": {
                                    "uuid": "1dcf3d60-e7a2-95f0-0fbb-0c7a307184c0",
                                    "value": "goBaby",
                                    "image_id": "v1485305805/htbednnsfgdbm8zhd0zp.png",
                                    "permalink": "gobaby-2",
                                    "entity_def_id": "organization"
                                },
                                "created_at": "2016-03-10T09:00:04Z",
                                "updated_at": "2018-02-13T01:15:18Z",
                                "appearance_type": "exhibitor",
                                "event_location_identifiers": [
                                    {
                                        "uuid": "d64b7615-985c-fbf4-4aff-aa89d70c4050",
                                        "value": "New York",
                                        "permalink": "new-york-new-york",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "83ead471-332b-d02e-67b7-67279aed075b",
                                        "value": "New York",
                                        "permalink": "new-york-united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "f110fca2-1055-99f6-996d-011c198b3928",
                                        "value": "United States",
                                        "permalink": "united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "b25caef9-a1b8-3a5d-6232-93b2dfb6a1d1",
                                        "value": "North America",
                                        "permalink": "north-america",
                                        "entity_def_id": "location"
                                    }
                                ]
                            }
                        ],
                        "participated_investments": [],
                        "headquarters_address": [
                            {
                                "identifier": {
                                    "uuid": "2ebfa3b6-2e3c-0959-c358-bfe7405417e4",
                                    "value": "Main Office",
                                    "entity_def_id": "address"
                                },
                                "street_1": "68 3rd Street",
                                "postal_code": "11231",
                                "created_at": "2016-03-10T09:02:59Z",
                                "location_identifiers": [
                                    {
                                        "uuid": "d64b7615-985c-fbf4-4aff-aa89d70c4050",
                                        "value": "New York",
                                        "permalink": "new-york-new-york",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "83ead471-332b-d02e-67b7-67279aed075b",
                                        "value": "New York",
                                        "permalink": "new-york-united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "f110fca2-1055-99f6-996d-011c198b3928",
                                        "value": "United States",
                                        "permalink": "united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "b25caef9-a1b8-3a5d-6232-93b2dfb6a1d1",
                                        "value": "North America",
                                        "permalink": "north-america",
                                        "entity_def_id": "location"
                                    }
                                ],
                                "updated_at": "2018-02-13T00:03:34Z"
                            }
                        ],
                        "child_organizations": [],
                        "raised_investments": [],
                        "participated_funds": [],
                        "raised_funding_rounds": [
                            {
                                "identifier": {
                                    "uuid": "25d419b7-acb2-47da-9cbd-cd6d949b40f9",
                                    "value": "Seed Round - goBaby",
                                    "image_id": "v1485305805/htbednnsfgdbm8zhd0zp.png",
                                    "permalink": "gobaby-2-seed--25d419b7",
                                    "entity_def_id": "funding_round"
                                },
                                "rank_funding_round": 147908,
                                "announced_on": "2017-05-10",
                                "money_raised": {
                                    "value": 40000,
                                    "currency": "USD",
                                    "value_usd": 40000
                                },
                                "short_description": "goBaby raised $40000 on 2017-05-10 in Seed Round\n",
                                "investment_stage": "seed",
                                "is_equity": true,
                                "investment_type": "seed",
                                "funded_organization_identifier": {
                                    "role": "investee",
                                    "uuid": "1dcf3d60-e7a2-95f0-0fbb-0c7a307184c0",
                                    "value": "goBaby",
                                    "image_id": "v1485305805/htbednnsfgdbm8zhd0zp.png",
                                    "permalink": "gobaby-2",
                                    "entity_def_id": "organization"
                                },
                                "created_at": "2017-10-30T16:35:41Z",
                                "updated_at": "2018-02-13T00:38:13Z"
                            }
                        ],
                        "child_ownerships": [],
                        "founders": [
                            {
                                "first_name": "Ksenia",
                                "rank_delta_d30": -0.1,
                                "num_founded_organizations": 1,
                                "identifier": {
                                    "uuid": "f3f8d11c-ebd5-4399-aa2b-8f7328ad0544",
                                    "value": "Ksenia Bolobine",
                                    "image_id": "qhgudccw9hvwk9o4zqzh",
                                    "permalink": "ksenia-bolobine",
                                    "entity_def_id": "person"
                                },
                                "short_description": "Ksenia Bolobine",
                                "num_jobs": 1,
                                "last_name": "Bolobine",
                                "rank_person": 565938,
                                "created_at": "2017-10-30T16:39:26Z",
                                "num_current_jobs": 1,
                                "rank_delta_d90": -0.1,
                                "updated_at": "2018-02-12T22:25:43Z",
                                "rank_delta_d7": -0.1,
                                "gender": "female"
                            },
                            {
                                "location_group_identifiers": [
                                    {
                                        "uuid": "b16ebe2d-033d-4d01-abfd-e5fbf811dc2f",
                                        "value": "Greater New York Area",
                                        "permalink": "greater-new-york-area",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "6c6b9ca5-966a-448b-8480-29b5a753f9ee",
                                        "value": "East Coast",
                                        "permalink": "east-coast-united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "75989641-ef66-456e-b7cd-dfa57b34e881",
                                        "value": "Northeastern US",
                                        "permalink": "northeastern-united-states",
                                        "entity_def_id": "location"
                                    }
                                ],
                                "first_name": "Natalie",
                                "rank_delta_d30": 3.4,
                                "num_founded_organizations": 3,
                                "identifier": {
                                    "uuid": "df620aec-b41f-ec54-6987-6a66d1cbd7a7",
                                    "value": "Natalie Kaminski",
                                    "image_id": "zqopsjws4n0iipoffdw1",
                                    "permalink": "natalie-kaminski",
                                    "entity_def_id": "person"
                                },
                                "primary_job_title": "Head of US Operations, Partner",
                                "linkedin": {
                                    "value": "https://www.linkedin.com/in/nataliekaminski/\n"
                                },
                                "short_description": "Natalie Kaminski - Head of US Operations, Partner @ JetRockets",
                                "num_jobs": 2,
                                "last_name": "Kaminski",
                                "primary_organization": {
                                    "uuid": "8c25b15f-4d03-408d-90a5-a4aa40978747",
                                    "value": "JetRockets",
                                    "image_id": "jxurw6o3lkzahrm2xqxg",
                                    "permalink": "jetrockets",
                                    "entity_def_id": "organization"
                                },
                                "rank_person": 182476,
                                "created_at": "2011-01-27T01:56:41Z",
                                "location_identifiers": [
                                    {
                                        "uuid": "d64b7615-985c-fbf4-4aff-aa89d70c4050",
                                        "value": "New York",
                                        "permalink": "new-york-new-york",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "83ead471-332b-d02e-67b7-67279aed075b",
                                        "value": "New York",
                                        "permalink": "new-york-united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "f110fca2-1055-99f6-996d-011c198b3928",
                                        "value": "United States",
                                        "permalink": "united-states",
                                        "entity_def_id": "location"
                                    },
                                    {
                                        "uuid": "b25caef9-a1b8-3a5d-6232-93b2dfb6a1d1",
                                        "value": "North America",
                                        "permalink": "north-america",
                                        "entity_def_id": "location"
                                    }
                                ],
                                "num_articles": 1,
                                "num_current_jobs": 2,
                                "rank_delta_d90": 3.4,
                                "updated_at": "2019-06-26T20:46:43Z",
                                "rank_delta_d7": -0.8,
                                "gender": "female"
                            }
                        ],
                        "ipos": [],
                        "raised_funds": [],
                        "parent_organization": [],
                        "acquirer_acquisitions": [],
                        "parent_ownership": [],
                        "fields": {
                            "company_type": "for_profit",
                            "location_group_identifiers": [
                                {
                                    "uuid": "b16ebe2d-033d-4d01-abfd-e5fbf811dc2f",
                                    "value": "Greater New York Area",
                                    "permalink": "greater-new-york-area",
                                    "entity_def_id": "location",
                                    "location_type": "group"
                                },
                                {
                                    "uuid": "6c6b9ca5-966a-448b-8480-29b5a753f9ee",
                                    "value": "East Coast",
                                    "permalink": "east-coast-united-states",
                                    "entity_def_id": "location",
                                    "location_type": "group"
                                },
                                {
                                    "uuid": "75989641-ef66-456e-b7cd-dfa57b34e881",
                                    "value": "Northeastern US",
                                    "permalink": "northeastern-united-states",
                                    "entity_def_id": "location",
                                    "location_type": "group"
                                }
                            ],
                            "rank_delta_d30": 0.1,
                            "founded_on": {
                                "value": "2015-09-15",
                                "precision": "day"
                            },
                            "website": { "value": "http://www.gobaby.co" },
                            "equity_funding_total": {
                                "value": 40000,
                                "currency": "USD",
                                "value_usd": 40000
                            },
                            "identifier": {
                                "uuid": "1dcf3d60-e7a2-95f0-0fbb-0c7a307184c0",
                                "value": "goBaby",
                                "image_id": "v1485305805/htbednnsfgdbm8zhd0zp.png",
                                "permalink": "gobaby-2",
                                "entity_def_id": "organization"
                            },
                            "founder_identifiers": [
                                {
                                    "uuid": "f3f8d11c-ebd5-4399-aa2b-8f7328ad0544",
                                    "value": "Ksenia Bolobine",
                                    "image_id": "qhgudccw9hvwk9o4zqzh",
                                    "permalink": "ksenia-bolobine",
                                    "entity_def_id": "person"
                                },
                                {
                                    "uuid": "df620aec-b41f-ec54-6987-6a66d1cbd7a7",
                                    "value": "Natalie Kaminski",
                                    "image_id": "zqopsjws4n0iipoffdw1",
                                    "permalink": "natalie-kaminski",
                                    "entity_def_id": "person"
                                }
                            ],
                            "description": "goBaby, the Airbnb for Baby-Gear-on-the-Go, is a peer-to-peer rental marketplace and on-demand app that helps families reduce the stress of traveling by leaving their cumbersome strollers, baby seats, and Pack ’n Plays at home.\n\nHow? By renting from goBaby’s trusted community of local parents!\n",
                            "category_groups": [
                                {
                                    "uuid": "26833aa6-0585-2aa7-8c69-63b4b14727c5",
                                    "value": "Apps",
                                    "permalink": "apps-2683",
                                    "entity_def_id": "category_group"
                                },
                                {
                                    "uuid": "3805abe5-5b70-a4a1-a51e-bcda8257aca0",
                                    "value": "Commerce and Shopping",
                                    "permalink": "commerce-and-shopping",
                                    "entity_def_id": "category_group"
                                },
                                {
                                    "uuid": "ec09d1af-e88f-6a8d-1db8-1dd5e3d49ea0",
                                    "value": "Mobile",
                                    "permalink": "mobile-ec09",
                                    "entity_def_id": "category_group"
                                },
                                {
                                    "uuid": "85b6bca9-930a-11bc-a608-a513b76fb637",
                                    "value": "Software",
                                    "permalink": "software-85b6",
                                    "entity_def_id": "category_group"
                                },
                                {
                                    "uuid": "2c1d0b56-8f0e-4d94-a102-53d32a969d35",
                                    "value": "Travel and Tourism",
                                    "permalink": "travel-and-tourism",
                                    "entity_def_id": "category_group"
                                }
                            ],
                            "linkedin": {
                                "value": "https://www.linkedin.com/company/gobaby"
                            },
                            "short_description": "The Airbnb for baby gear rentals.",
                            "num_current_positions": 2,
                            "operating_status": "active",
                            "rank_org": 59778,
                            "facebook": {
                                "value": "https://www.facebook.com/goBaby.co"
                            },
                            "num_employees_enum": "c_00001_00010",
                            "status": "operating",
                            "funding_total": {
                                "value": 40000,
                                "currency": "USD",
                                "value_usd": 40000
                            },
                            "num_funding_rounds": 1,
                            "last_equity_funding_type": "seed",
                            "last_funding_type": "seed",
                            "categories": [
                                {
                                    "uuid": "5eec8ef3-9a35-3b26-1184-9dff459291fd",
                                    "value": "Family",
                                    "permalink": "family",
                                    "entity_def_id": "category"
                                },
                                {
                                    "uuid": "772da8fe-26d7-ea09-00ff-0fc7c8368b50",
                                    "value": "Marketplace",
                                    "permalink": "marketplace-772d",
                                    "entity_def_id": "category"
                                },
                                {
                                    "uuid": "78f709ae-d8fb-cd28-218a-f090789f628f",
                                    "value": "Mobile Apps",
                                    "permalink": "mobile-apps",
                                    "entity_def_id": "category"
                                },
                                {
                                    "uuid": "e69d7dbc-b29e-a56f-6dfa-f664b545fd29",
                                    "value": "Sharing Economy",
                                    "permalink": "sharing-economy",
                                    "entity_def_id": "category"
                                },
                                {
                                    "uuid": "8672f521-ce9a-e851-adff-c35d2441a0ad",
                                    "value": "Travel",
                                    "permalink": "travel",
                                    "entity_def_id": "category"
                                }
                            ],
                            "created_at": "2016-03-10T09:00:04Z",
                            "location_identifiers": [
                                {
                                    "uuid": "d64b7615-985c-fbf4-4aff-aa89d70c4050",
                                    "value": "New York",
                                    "permalink": "new-york-new-york",
                                    "entity_def_id": "location",
                                    "location_type": "city"
                                },
                                {
                                    "uuid": "83ead471-332b-d02e-67b7-67279aed075b",
                                    "value": "New York",
                                    "permalink": "new-york-united-states",
                                    "entity_def_id": "location",
                                    "location_type": "region"
                                },
                                {
                                    "uuid": "f110fca2-1055-99f6-996d-011c198b3928",
                                    "value": "United States",
                                    "permalink": "united-states",
                                    "entity_def_id": "location",
                                    "location_type": "country"
                                },
                                {
                                    "uuid": "b25caef9-a1b8-3a5d-6232-93b2dfb6a1d1",
                                    "value": "North America",
                                    "permalink": "north-america",
                                    "entity_def_id": "location",
                                    "location_type": "continent"
                                }
                            ],
                            "num_articles": 9,
                            "last_funding_at": "2017-05-10",
                            "num_event_appearances": 2,
                            "twitter": {
                                "value": "https://twitter.com/gobabyco"
                            },
                            "rank_delta_d90": 1,
                            "updated_at": "2019-06-24T21:47:56Z",
                            "last_equity_funding_total": {
                                "value": 40000,
                                "currency": "USD",
                                "value_usd": 40000
                            },
                            "contact_email": "hello@gobaby.co",
                            "funding_stage": "seed",
                            "rank_delta_d7": -0.4,
                            "last_funding_total": {
                                "value": 40000,
                                "currency": "USD",
                                "value_usd": 40000
                            },
                            "num_founders": 2
                        },
                        "investors": [],
                        "acquiree_acquisitions": [],
                        "participated_funding_rounds": []
                    }
                }
            },
            "OrganizationCardLookupResponseExample": {
                "value": {
                    "properties": {
                        "identifier": {
                            "uuid": "1dcf3d60-e7a2-95f0-0fbb-0c7a307184c0",
                            "value": "goBaby",
                            "image_id": "v1485305805/htbednnsfgdbm8zhd0zp.png",
                            "permalink": "gobaby-2",
                            "entity_def_id": "organization"
                        }
                    },
                    "cards": {
                        "press_references": [
                            {
                                "identifier": {
                                    "uuid": "89016b44-5723-4486-b102-5dd697bfa16e",
                                    "value": "The Global Association of Baby Equipment Rental Companies Partners with goBaby\n",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://www.prweb.com/releases/2018/02/prweb15165216.htm\n"
                                },
                                "posted_on": "2018-02-06",
                                "publisher": "PRWeb",
                                "created_at": "2018-02-06T19:02:54Z",
                                "updated_at": "2018-02-13T00:24:54Z"
                            },
                            {
                                "author": "Tishin Donkersley",
                                "identifier": {
                                    "uuid": "33539065-4f21-469c-8f00-607c705be105",
                                    "value": "Travel Made Easier with GoBaby, the Airbnb for Baby Gear",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "https://tech.co/travel-easier-gobaby-airbnb-baby-gear-2017-11"
                                },
                                "posted_on": "2017-11-16",
                                "publisher": "Tech Cocktail",
                                "thumbnail_url": "https://tech.co/wp-content/uploads/2017/11/pexels-photo-265987-baby-e1510847602971.jpeg",
                                "created_at": "2017-11-17T02:19:53Z",
                                "updated_at": "2018-02-13T00:06:39Z"
                            },
                            {
                                "author": "Dave Baldwin",
                                "identifier": {
                                    "uuid": "234383e5-2f1d-43dc-8b56-2ab389429ace",
                                    "value": "7 Apps to Save Mad Money on Toys, Kids’ Clothes, and Baby Gear",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "https://www.fatherly.com/gear/apps-to-save-money-on-toys-kids-clothing-and-baby-gear/\n"
                                },
                                "posted_on": "2017-09-21",
                                "publisher": "Fatherly",
                                "thumbnail_url": "https://images.fatherly.com/wp-content/uploads/2017/09/money-saving-apps.jpg?q=65&w=1200",
                                "created_at": "2017-10-30T16:51:44Z",
                                "updated_at": "2018-02-13T00:03:35Z"
                            },
                            {
                                "author": "Alicia Vitarelli",
                                "identifier": {
                                    "uuid": "19bb33f4-dd30-4f6a-b0fd-e039dcc104a6",
                                    "value": "What's the Deal: Make extra money while the kids nap",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://6abc.com/shopping/whats-the-deal-make-extra-money-while-the-kids-nap/1977008/\n"
                                },
                                "posted_on": "2017-05-10",
                                "publisher": "6abc Philadelphia",
                                "thumbnail_url": "http://cdn01.basis.net/78700/78659/62b2de02dbb03c54.jpg\n",
                                "created_at": "2017-10-30T16:51:44Z",
                                "updated_at": "2018-02-13T00:03:35Z"
                            },
                            {
                                "author": "rtyuliyageikhman",
                                "identifier": {
                                    "uuid": "a992d4a4-758c-48a3-b72f-82d947cafd6d",
                                    "value": "Must-Have App!: goBaby Lets You Rent Kid Gear Anywhere",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://redtri.com/new-york/must-have-app-gobaby-baby-gear-rental-service-for-travel/\n"
                                },
                                "posted_on": "2017-03-08",
                                "publisher": "Red Tricycle",
                                "thumbnail_url": "https://redtricom.files.wordpress.com/2017/02/4918265245_f61cbb57ac_z-e1488503567583.jpg?w=605&h=405",
                                "created_at": "2017-10-30T16:51:44Z",
                                "updated_at": "2018-02-13T00:03:35Z"
                            },
                            {
                                "author": "Laura Norman",
                                "identifier": {
                                    "uuid": "b7a41db0-2694-be6f-f590-0ca0e56de763",
                                    "value": "Pitch to Win: 3 Key Pointers from the Winner of the SMB Pitch Contest",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "https://www.salesforce.com/blog/2017/01/key-pitch-pointers.html\n"
                                },
                                "posted_on": "2017-01-17",
                                "thumbnail_url": "https://www.salesforce.com/content/dam/blogs/us/Jan2017/nataliekaminski.jpg\n",
                                "created_at": "2017-01-25T01:00:42Z",
                                "updated_at": "2018-02-12T21:39:09Z"
                            },
                            {
                                "author": "Beth Skwarecki",
                                "identifier": {
                                    "uuid": "2fad813e-d183-a750-f013-e7fa169ef15b",
                                    "value": "GoBaby Lets You Rent Strollers and Car Seats at Your Travel Destination\n",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://lifehacker.com/gobaby-lets-you-rent-strollers-and-car-seats-at-your-tr-1790626750\n"
                                },
                                "posted_on": "2016-12-30",
                                "publisher": "Life Hacker",
                                "thumbnail_url": "https://i.kinja-img.com/gawker-media/image/upload/s--ngdmGBg_--/c_fill,fl_progressive,g_center,h_900,q_80,w_1600/uyt66hu5pph4owj6eud3.png\n",
                                "created_at": "2017-01-25T00:58:54Z",
                                "updated_at": "2018-02-13T02:00:32Z"
                            },
                            {
                                "author": "Jennifer Jolly",
                                "identifier": {
                                    "uuid": "96db1443-72fe-a6f3-de01-418d74fe6e70",
                                    "value": "Last minute shopper: Here's a few shortcuts",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://www.usatoday.com/story/tech/columnist/2016/12/18/lost-holiday-haze-these-tech-tools-can-save-day/95443298/\n"
                                },
                                "posted_on": "2016-12-18",
                                "publisher": "USA Today Money",
                                "thumbnail_url": "http://www.gannett-cdn.com/-mm-/1ad90e5943ecc8d9aca78c788cc1c3a06bf5a586/c=0-31-704-429&r=x633&c=1200x630/local/-/media/2016/12/14/USATODAY/USATODAY/636173319777524673-MIN-006-HNY-001NEWYEAR-A-PZ.jpg",
                                "created_at": "2017-01-25T01:00:05Z",
                                "updated_at": "2018-02-12T21:26:05Z"
                            },
                            {
                                "author": "Dana Sitar",
                                "identifier": {
                                    "uuid": "69e1cf11-6a99-e0d0-86b6-6e92bfba88d0",
                                    "value": "Don’t Let That Old Stroller Collect Dust. Here’s How to Make Money With It\n",
                                    "entity_def_id": "press_reference"
                                },
                                "url": {
                                    "value": "http://www.thepennyhoarder.com/gobaby-rent-baby-gear/\n"
                                },
                                "posted_on": "2016-12-12",
                                "publisher": "The Penny Hoarder",
                                "thumbnail_url": "http://cdn.thepennyhoarder.com/wp-content/uploads/2016/12/12110046/GettyImages-ChiccoDodiFC.jpg\n",
                                "created_at": "2017-01-25T00:59:31Z",
                                "updated_at": "2018-07-06T22:32:59Z"
                            }
                        ]
                    }
                }
            },
            "OrganizationSearchResponseExample": {
                "value": {
                    "count": 20088,
                    "entities": [
                        {
                            "uuid": "0ab984e9-7413-addd-0b09-7fd5fdef4150",
                            "properties": {
                                "identifier": {
                                    "permalink": "national-institutes-of-health",
                                    "image_id": "v1479301412/qdfrsmsuqu8m22jaaoor.png",
                                    "uuid": "0ab984e9-7413-addd-0b09-7fd5fdef4150",
                                    "entity_def_id": "organization",
                                    "value": "National Institutes of Health"
                                },
                                "short_description": "National Institutes of Health is a biomedical research facility in the United States that focuses on biomedical and health-related research.",
                                "categories": [
                                    {
                                        "entity_def_id": "category",
                                        "permalink": "biotechnology",
                                        "uuid": "58842728-7ab9-5bd1-bb67-e8e55f6520a0",
                                        "value": "Biotechnology"
                                    },
                                    {
                                        "entity_def_id": "category",
                                        "permalink": "financial-services",
                                        "uuid": "90b4194f-1d4f-ff5c-d7a6-6b6f32ae4892",
                                        "value": "Financial Services"
                                    }
                                ],
                                "rank_org": 3
                            }
                        },
                        {
                            "uuid": "20135206-96eb-8be0-9ac4-670b257e532c",
                            "properties": {
                                "identifier": {
                                    "permalink": "stanford-university",
                                    "image_id": "kgi349quyogvrathgoxw",
                                    "uuid": "20135206-96eb-8be0-9ac4-670b257e532c",
                                    "entity_def_id": "organization",
                                    "value": "Stanford University"
                                },
                                "short_description": "Stanford University is one of the world's leading teaching and research universities.",
                                "categories": [
                                    {
                                        "entity_def_id": "category",
                                        "permalink": "biotechnology",
                                        "uuid": "58842728-7ab9-5bd1-bb67-e8e55f6520a0",
                                        "value": "Biotechnology"
                                    },
                                    {
                                        "entity_def_id": "category",
                                        "permalink": "communities",
                                        "uuid": "bc4ee7e1-d4a1-c228-c551-29d716ba971f",
                                        "value": "Communities"
                                    }
                                ],
                                "rank_org": 241358
                            }
                        }
                    ]
                }
            }
        },
        "responses": {
            "GenericBadRequestError": {
                "description": "Bad request",
                "content": {
                    "application/json": {
                        "schema": { "$ref": "#/components/schemas/Errors" }
                    }
                }
            },
            "GenericNotFoundError": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": { "$ref": "#/components/schemas/Errors" }
                    }
                }
            },
            "GenericInternalServerError": {
                "description": "Request failed",
                "content": {
                    "application/json": {
                        "schema": { "$ref": "#/components/schemas/Errors" }
                    }
                }
            },
            "AutocompleteResult": {
                "description": "Results are identifiers matching the search query.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AutocompleteResult"
                        }
                    }
                }
            },
            "DeletedEntitiesResult": {
                "description": "Results are identifiers of deleted entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DeletedEntitiesResult"
                        }
                    }
                }
            },
            "AcquisitionSearchResults": {
                "description": "Search results include Acquisition entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AcquisitionSearchResults"
                        }
                    }
                }
            },
            "AddressSearchResults": {
                "description": "Search results include Address entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/AddressSearchResults"
                        }
                    }
                }
            },
            "CategorySearchResults": {
                "description": "Search results include Category entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CategorySearchResults"
                        }
                    }
                }
            },
            "CategoryGroupSearchResults": {
                "description": "Search results include Category Group entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/CategoryGroupSearchResults"
                        }
                    }
                }
            },
            "DegreeSearchResults": {
                "description": "Search results include Degree entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/DegreeSearchResults"
                        }
                    }
                }
            },
            "EventSearchResults": {
                "description": "Search results include Event entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EventSearchResults"
                        }
                    }
                }
            },
            "EventAppearanceSearchResults": {
                "description": "Search results include Event Appearance entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/EventAppearanceSearchResults"
                        }
                    }
                }
            },
            "FundSearchResults": {
                "description": "Search results include Fund entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FundSearchResults"
                        }
                    }
                }
            },
            "FundingRoundSearchResults": {
                "description": "Search results include Funding Round entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/FundingRoundSearchResults"
                        }
                    }
                }
            },
            "InvestmentSearchResults": {
                "description": "Search results include Investment entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/InvestmentSearchResults"
                        }
                    }
                }
            },
            "IpoSearchResults": {
                "description": "Search results include Ipo entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/IpoSearchResults"
                        }
                    }
                }
            },
            "JobSearchResults": {
                "description": "Search results include Job entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/JobSearchResults"
                        }
                    }
                }
            },
            "KeyEmployeeChangeSearchResults": {
                "description": "Search results include Key Employee Change entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/KeyEmployeeChangeSearchResults"
                        }
                    }
                }
            },
            "LayoffSearchResults": {
                "description": "Search results include Layoff entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/LayoffSearchResults"
                        }
                    }
                }
            },
            "LocationSearchResults": {
                "description": "Search results include Location entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/LocationSearchResults"
                        }
                    }
                }
            },
            "OrganizationSearchResults": {
                "description": "Search results include Organization entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OrganizationSearchResults"
                        },
                        "examples": {
                            "example": {
                                "$ref": "#/components/examples/OrganizationSearchResponseExample"
                            }
                        }
                    }
                }
            },
            "OwnershipSearchResults": {
                "description": "Search results include Ownership entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/OwnershipSearchResults"
                        }
                    }
                }
            },
            "PersonSearchResults": {
                "description": "Search results include Person entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PersonSearchResults"
                        }
                    }
                }
            },
            "PressReferenceSearchResults": {
                "description": "Search results include Press Reference entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PressReferenceSearchResults"
                        }
                    }
                }
            },
            "PrincipalSearchResults": {
                "description": "Search results include Principal entities.",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/PrincipalSearchResults"
                        }
                    }
                }
            }
        },
        "schemas": {
            "CurrencyEnum": {
                "type": "string",
                "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BYR",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHF",
                    "CLF",
                    "CLP",
                    "CNY",
                    "COP",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HRK",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LTL",
                    "LVL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRO",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SKK",
                    "SLL",
                    "SOS",
                    "SRD",
                    "SSP",
                    "STD",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "UYU",
                    "UZS",
                    "VEF",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XAG",
                    "XAU",
                    "XBA",
                    "XBB",
                    "XBC",
                    "XBD",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPD",
                    "XPF",
                    "XPT",
                    "YER",
                    "ZAR",
                    "ZMK",
                    "ZMW",
                    "xts"
                ]
            },
            "AutocompleteResult": {
                "type": "object",
                "required": ["entities"],
                "properties": {
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutocompleteEntity"
                        }
                    }
                }
            },
            "AutocompleteEntity": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "identifier": {
                        "$ref": "#/components/schemas/EntityIdentifier"
                    },
                    "facet_ids": {
                        "type": "array",
                        "items": { "type": "string" }
                    },
                    "short_description": { "type": "string" }
                }
            },
            "DateWithPrecision": {
                "description": "A field that will contain date information up to a certain level of precision. E.g. month, day, etc.",
                "type": "object",
                "required": ["precision"],
                "properties": {
                    "precision": {
                        "type": "string",
                        "enum": ["none", "year", "month", "day"]
                    },
                    "value": { "type": "string", "format": "date" }
                }
            },
            "DatetimeWithPrecision": {
                "description": "A field that will contain datetime information up to a certain level of precision. E.g. month, day, hour, etc.",
                "type": "object",
                "required": ["precision"],
                "properties": {
                    "precision": {
                        "type": "string",
                        "enum": [
                            "none",
                            "year",
                            "month",
                            "day",
                            "hour",
                            "minute",
                            "second"
                        ]
                    },
                    "value": { "type": "string", "format": "date-time" }
                }
            },
            "Errors": {
                "type": "object",
                "properties": { "value": { "type": "string" } }
            },
            "MoneyDecimal": {
                "description": "A field containing decimal data that represents some amount of money",
                "type": "object",
                "required": ["currency", "value"],
                "properties": {
                    "currency": { "$ref": "#/components/schemas/CurrencyEnum" },
                    "value_usd": { "type": "number", "format": "double" },
                    "value": { "type": "number", "format": "double" }
                }
            },
            "Money": {
                "description": "A field containing integer data that represents some amount of money",
                "type": "object",
                "required": ["currency", "value"],
                "properties": {
                    "currency": { "$ref": "#/components/schemas/CurrencyEnum" },
                    "value_usd": { "type": "integer", "format": "int64" },
                    "value": { "type": "integer", "format": "int64" }
                }
            },
            "Link": {
                "description": "An object representing both the url and some labeling text for that url",
                "type": "object",
                "properties": {
                    "value": { "type": "string", "maxLength": 8192 },
                    "label": { "type": "string", "maxLength": 8192 }
                }
            },
            "EntitySearch": {
                "type": "object",
                "required": ["field_ids", "query"],
                "properties": {
                    "field_ids": {
                        "description": "Fields to include as columns in the search result entities - array of field_id strings",
                        "type": "array",
                        "items": { "type": "string" }
                    },
                    "query": {
                        "description": "Search query to perform on the designated entity",
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Predicate" }
                    },
                    "order": {
                        "description": "Order in which the search results should be returned",
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Order" }
                    },
                    "limit": {
                        "description": "Number of rows to return. Default is 100, min is 1, max is 2000.",
                        "type": "integer"
                    },
                    "before_id": {
                        "description": "Used to paginate search results to the previous page. before_id should be the uuid of the first item in the current page. May not be provided simultaneously with after_id.",
                        "type": "string",
                        "format": "uuid"
                    },
                    "after_id": {
                        "description": "Used to paginate search results to the next page. after_id should be the uuid of the last item in the current page. May not be provided simultaneously with before_id.",
                        "type": "string",
                        "format": "uuid"
                    }
                }
            },
            "EntityIdentifier": {
                "description": "Every entity in the system has a unique identifier that contains all necessary properties to represent it.",
                "type": "object",
                "required": ["uuid", "entity_def_id"],
                "properties": {
                    "uuid": {
                        "description": "Globally unique id of this entity",
                        "type": "string",
                        "format": "uuid"
                    },
                    "permalink": {
                        "description": "Optionally provided within Entity Def unique nice id of this entity",
                        "type": "string"
                    },
                    "value": {
                        "description": "Textual representation of this entity (i.e. its \"name\")",
                        "type": "string"
                    },
                    "image_id": {
                        "description": "Optionally provided location to obtain an image representing this entity",
                        "type": "string"
                    },
                    "entity_def_id": {
                        "description": "What type of entity this be",
                        "type": "string"
                    }
                }
            },
            "LocationIdentifier": {
                "description": "Every location entity in the system has a unique identifier that contains all necessary properties to represent it.",
                "type": "object",
                "required": ["uuid", "entity_def_id"],
                "properties": {
                    "uuid": {
                        "description": "Globally unique id of this entity",
                        "type": "string",
                        "format": "uuid"
                    },
                    "permalink": {
                        "description": "Optionally provided within Entity Def unique nice id of this entity",
                        "type": "string"
                    },
                    "value": {
                        "description": "Textual representation of this entity (i.e. its \"name\")",
                        "type": "string"
                    },
                    "image_id": {
                        "description": "Optionally provided location to obtain an image representing this entity",
                        "type": "string"
                    },
                    "entity_def_id": {
                        "description": "What type of entity this be",
                        "type": "string"
                    },
                    "location_type": {
                        "description": "Type of location (city, country, etc)",
                        "type": "string",
                        "enum": [
                            "city",
                            "region",
                            "country",
                            "continent",
                            "group"
                        ]
                    }
                }
            },
            "OperatorsEnum": {
                "type": "string",
                "enum": [
                    "blank",
                    "eq",
                    "not_eq",
                    "gt",
                    "gte",
                    "lt",
                    "lte",
                    "starts",
                    "contains",
                    "between",
                    "includes",
                    "not_includes",
                    "includes_all",
                    "not_includes_all",
                    "domain_eq",
                    "domain_blank"
                ],
                "description": "Description of operators:\n * blank - Blank\n * eq - Equal\n * not_eq - Not equal\n * gt - Greater than\n * gte - Greater than or equal\n * lt - Less than\n * lte - Less than or equal\n * starts - Starts\n * contains - Contains\n * between - Between\n * includes - Includes\n * not_includes - Does not include\n * includes_all - Includes all\n * not_includes_all - Does not include all\n * domain_eq - Domain equals\n * domain_blank - Domain is blank\n"
            },
            "Predicate": {
                "description": "A simple search criterion",
                "type": "object",
                "required": ["type", "field_id", "operator_id"],
                "properties": {
                    "type": {
                        "description": "The type of query",
                        "type": "string",
                        "required": ["predicate"],
                        "enum": ["predicate"]
                    },
                    "field_id": {
                        "description": "The field to operate on",
                        "type": "string"
                    },
                    "operator_id": {
                        "$ref": "#/components/schemas/OperatorsEnum"
                    },
                    "values": {
                        "description": "values array with data type matching field_id type",
                        "type": "array",
                        "items": { "type": "object" }
                    }
                }
            },
            "Order": {
                "type": "object",
                "required": ["field_id", "sort"],
                "properties": {
                    "field_id": {
                        "description": "Name of the field to sort on",
                        "type": "string"
                    },
                    "sort": {
                        "description": "Direction of sorting",
                        "type": "string",
                        "default": "asc",
                        "enum": ["asc", "desc"]
                    },
                    "nulls": {
                        "description": "Whether to include null values at the beginning or end of the sort. Defaults to end.",
                        "type": "string",
                        "enum": ["first", "last"],
                        "default": "last"
                    }
                }
            },
            "DeletedEntitiesResult": {
                "type": "object",
                "properties": {
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeletedEntity"
                        }
                    }
                }
            },
            "DeletedEntity": {
                "type": "object",
                "properties": {
                    "identifier": {
                        "$ref": "#/components/schemas/EntityIdentifier"
                    },
                    "deleted_at": {
                        "description": "Timestamp when entity was deleted",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Organization": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "acquirer_identifier": {
                        "description": "Name of the organization that made the acquisition\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "Alternate or previous names for the organization\\\nField Type: text_short_multi\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "categories": {
                        "type": "array",
                        "description": "Descriptive keyword for an Organization (e.g. SaaS, Android, Cloud Computing, Medical Device)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "category_groups": {
                        "type": "array",
                        "description": "Superset of Industries (e.g. Software, Mobile, Health Care)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "closed_on": {
                        "description": "The date when the organization is closed\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "company_type": {
                        "type": "string",
                        "description": "Whether an Organization is for profit or non-profit\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * for_profit - For Profit\n * non_profit - Non-profit\n"
                    },
                    "contact_email": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "General contact email for the organization\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "delisted_on": {
                        "description": "The date when the Organization removed its stock from the stock exchange.\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "demo_days": {
                        "type": "boolean",
                        "description": "Whether an accelerator hosts any demo days\\\nField Type: boolean\\\nSearchable: Yes\\\nSearch Operators: blank, eq\n"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Organization Description, Industries, Industry Groups\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "diversity_spotlights": {
                        "type": "array",
                        "description": "Types of diversity represented in an organization, specifically of those who are founding members, currently the CEO, or have check-writing abilities in an investment firm. This feature is in beta and may change with future updates.\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * organization - Organization\n"
                    },
                    "equity_funding_total": {
                        "description": "Total funding amount raised across all Funding Rounds excluding debt\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "exited_on": {
                        "description": "Date the organization was acquired or went public\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "facebook": {
                        "description": "Link to Organization's Facebook page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "facet_ids": {
                        "type": "array",
                        "description": "Field Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* company - Company\n* investor - Investor\n* school - School\n"
                        }
                    },
                    "founded_on": {
                        "description": "Date the Organization was founded\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "founder_identifiers": {
                        "type": "array",
                        "description": "Founders of the organization\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "funding_stage": {
                        "type": "string",
                        "description": "This field describes an organization's most recent funding status (e.g. Early Stage Venture, Late Stage Venture, M&A)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * early_stage_venture - Early Stage Venture\n * ipo - IPO\n * late_stage_venture - Late Stage Venture\n * m_and_a - M&A\n * private_equity - Private Equity\n * seed - Seed\n"
                    },
                    "funding_total": {
                        "description": "Total amount raised across all funding rounds\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "funds_total": {
                        "description": "Total funding amount raised across all Fund Raises\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "hub_tags": {
                        "type": "array",
                        "description": "Tags are labels assigned to organizations, which identify their belonging to a group with that shared label\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* cbvp - Crunchbase Venture Program\n* emerging_unicorn - Emerging Unicorn\n* exited_unicorn - Exited Unicorn\n* pledge_one_percent - Pledge 1%\n* unicorn - Unicorn\n"
                        }
                    },
                    "identifier": {
                        "description": "Name of the Organization\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "image_id": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The profile image of the organization on Crunchbase\\\nField Type: image_id\\\nSearchable: No\n"
                    },
                    "image_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The cloudinary url of the profile image\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "investor_identifiers": {
                        "type": "array",
                        "description": "The top 5 investors with investments in this company, ordered by Crunchbase Rank\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "investor_stage": {
                        "type": "array",
                        "description": "This describes the stage of investments made by this organization (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* convertible_note - Convertible Note\n* crowdfunding - Crowdfunding\n* debt - Debt\n* early_stage_venture - Early Stage Venture\n* grant - Grant\n* initial_coin_offering - Initial Coin Offering\n* late_stage_venture - Late Stage Venture\n* non_equity_assistance - Non Equity Assistance\n* post_ipo - Post-Ipo\n* private_equity - Private Equity\n* secondary_market - Secondary Market\n* seed - Seed\n* venture - Venture\n"
                        }
                    },
                    "investor_type": {
                        "type": "array",
                        "description": "This describes the type of investor this organization is (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* accelerator - Accelerator\n* angel_group - Angel Group\n* co_working_space - Co-Working Space\n* corporate_venture_capital - Corporate Venture Capital\n* entrepreneurship_program - Entrepreneurship Program\n* family_investment_office - Family Investment Office\n* fund_of_funds - Fund Of Funds\n* government_office - Government Office\n* hedge_fund - Hedge Fund\n* incubator - Incubator\n* investment_bank - Investment Bank\n* micro_vc - Micro VC\n* pension_funds - Pension Funds\n* private_equity_firm - Private Equity Firm\n* secondary_purchaser - Secondary Purchaser\n* startup_competition - Startup Competition\n* syndicate - Syndicate\n* university_program - University Program\n* venture_capital - Venture Capital\n* venture_debt - Venture Debt\n"
                        }
                    },
                    "ipo_status": {
                        "type": "string",
                        "description": "The current public status of the Organization\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * delisted - Delisted\n * private - Private\n * public - Public\n"
                    },
                    "last_equity_funding_total": {
                        "description": "Amount of most recent Funding Round excluding debt\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "last_equity_funding_type": {
                        "type": "string",
                        "description": "The most recent Funding Round excluding debt\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * angel - Angel\n * convertible_note - Convertible Note\n * corporate_round - Corporate Round\n * debt_financing - Debt Financing\n * equity_crowdfunding - Equity Crowdfunding\n * grant - Grant\n * initial_coin_offering - Initial Coin Offering\n * non_equity_assistance - Non-equity Assistance\n * post_ipo_debt - Post-IPO Debt\n * post_ipo_equity - Post-IPO Equity\n * post_ipo_secondary - Post-IPO Secondary\n * pre_seed - Pre-Seed\n * private_equity - Private Equity\n * product_crowdfunding - Product Crowdfunding\n * secondary_market - Secondary Market\n * seed - Seed\n * series_a - Series A\n * series_b - Series B\n * series_c - Series C\n * series_d - Series D\n * series_e - Series E\n * series_f - Series F\n * series_g - Series G\n * series_h - Series H\n * series_i - Series I\n * series_j - Series J\n * series_unknown - Venture - Series Unknown\n * undisclosed - Undisclosed\n"
                    },
                    "last_funding_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of most recent Funding Round\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "last_funding_total": {
                        "description": "Amount of most recent Funding Round\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "last_funding_type": {
                        "type": "string",
                        "description": "Last funding round type (e.g. Seed, Series A, Private Equity)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * angel - Angel\n * convertible_note - Convertible Note\n * corporate_round - Corporate Round\n * debt_financing - Debt Financing\n * equity_crowdfunding - Equity Crowdfunding\n * grant - Grant\n * initial_coin_offering - Initial Coin Offering\n * non_equity_assistance - Non-equity Assistance\n * post_ipo_debt - Post-IPO Debt\n * post_ipo_equity - Post-IPO Equity\n * post_ipo_secondary - Post-IPO Secondary\n * pre_seed - Pre-Seed\n * private_equity - Private Equity\n * product_crowdfunding - Product Crowdfunding\n * secondary_market - Secondary Market\n * seed - Seed\n * series_a - Series A\n * series_b - Series B\n * series_c - Series C\n * series_d - Series D\n * series_e - Series E\n * series_f - Series F\n * series_g - Series G\n * series_h - Series H\n * series_i - Series I\n * series_j - Series J\n * series_unknown - Venture - Series Unknown\n * undisclosed - Undisclosed\n"
                    },
                    "last_key_employee_change_date": {
                        "type": "string",
                        "format": "date",
                        "description": "See companies that have hired executives (VP and above) in a certain date range\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "last_layoff_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of last layoff event\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "layout_id": {
                        "type": "string",
                        "description": "This is the auto-generated layout for the profile\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * investor - Investor Layout\n * school - School Layout\n"
                    },
                    "legal_name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The legal name of the organization\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "linkedin": {
                        "description": "Link to Organization's LinkedIn page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "listed_stock_symbol": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Stock ticker symbol (e.g. AAPL, FB, TWTR)\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "location_group_identifiers": {
                        "type": "array",
                        "description": "Where the organization is headquartered (e.g. San Francisco Bay Area, Silicon Valley)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "location_identifiers": {
                        "type": "array",
                        "description": "Where the organization is headquartered\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "num_acquisitions": {
                        "type": "number",
                        "description": "Total number of Acquisitions\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_alumni": {
                        "type": "number",
                        "description": "Total number of alumni\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_articles": {
                        "type": "number",
                        "description": "Number of news articles that reference the Organization\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_current_advisor_positions": {
                        "type": "number",
                        "description": "Total number of board member and advisor profiles an organization has on Crunchbase\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_current_positions": {
                        "type": "number",
                        "description": "Total number of employee profiles an organization has on Crunchbase\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_diversity_spotlight_investments": {
                        "type": "number",
                        "description": "Total number of diversity investments made by an investor\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_employees_enum": {
                        "type": "string",
                        "description": "Total number of employees\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * c_00001_00010 - 1-10\n * c_00011_00050 - 11-50\n * c_00051_00100 - 51-100\n * c_00101_00250 - 101-250\n * c_00251_00500 - 251-500\n * c_00501_01000 - 501-1000\n * c_01001_05000 - 1001-5000\n * c_05001_10000 - 5001-10000\n * c_10001_max - 10001+\n"
                    },
                    "num_enrollments": {
                        "type": "string",
                        "description": "Total number of Enrollments\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * c_00001_00010 - 1-10\n * c_00011_00050 - 11-50\n * c_00051_00100 - 51-100\n * c_00101_00250 - 101-250\n * c_00251_00500 - 251-500\n * c_00501_01000 - 501-1000\n * c_01001_05000 - 1001-5000\n * c_05001_10000 - 5001-10000\n * c_10001_max - 10001+\n"
                    },
                    "num_event_appearances": {
                        "type": "number",
                        "description": "Total number of events an Organization appeared in\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_exits": {
                        "type": "number",
                        "description": "Total number of Exits\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_exits_ipo": {
                        "type": "number",
                        "description": "Total number of Exits (IPO)\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_founder_alumni": {
                        "type": "number",
                        "description": "Total number of Alumni that are Founders\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_founders": {
                        "type": "number",
                        "description": "Total number of Founders\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_funding_rounds": {
                        "type": "number",
                        "description": "Total number of Funding Rounds\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_funds": {
                        "type": "number",
                        "description": "Total number of Funds raised\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_investments": {
                        "type": "number",
                        "description": "Total number of Investments made\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_investors": {
                        "type": "number",
                        "description": "Total number of investment firms and individual investors\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_lead_investments": {
                        "type": "number",
                        "description": "Total number of Lead Investments made\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_lead_investors": {
                        "type": "number",
                        "description": "Total number of lead investment firms and individual investors\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_past_positions": {
                        "type": "number",
                        "description": "Total number of past employee profiles of an organization\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_portfolio_organizations": {
                        "type": "number",
                        "description": "Total number of portfolio organizations\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_sub_organizations": {
                        "type": "number",
                        "description": "Total number of sub-organizations that belongs to a parent Organization\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "operating_status": {
                        "type": "string",
                        "description": "Operating Status of Organization e.g. Active, Closed\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * active - Active\n * closed - Closed\n"
                    },
                    "override_layout_id": {
                        "type": "string",
                        "description": "Override the layout of the Entity Profile\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * default - Default Layout\n * investor - Investor Layout\n * school - School Layout\n"
                    },
                    "owner_identifier": {
                        "description": "This is the parent Organization of the sub-organization\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "permalink_aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "These are the alternative aliases to the primary permalink of the Organization\\\nField Type: text_exact_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Organization's general phone number\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "program_application_deadline": {
                        "type": "string",
                        "format": "date",
                        "description": "The deadline for applying to the Accelerator Program\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "program_duration": {
                        "type": "number",
                        "description": "The duration of the Acceleration Program in number of weeks\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "program_type": {
                        "type": "string",
                        "description": "The type of Accelerator Program (e.g. On-Site, Online)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * on_site - On-Site\n * online - Online\n"
                    },
                    "rank_delta_d30": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 30 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_delta_d7": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 7 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_delta_d90": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 90 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_org": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active Organizations\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_principal": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active Organizations and People\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "revenue_range": {
                        "type": "string",
                        "description": "Estimated revenue range for organization\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * r_00000000 - Less than $1M\n * r_00001000 - $1M to $10M\n * r_00010000 - $10M to $50M\n * r_00050000 - $50M to $100M\n * r_00100000 - $100M to $500M\n * r_00500000 - $500M to $1B\n * r_01000000 - $1B to $10B\n * r_10000000 - $10B+\n"
                    },
                    "school_method": {
                        "type": "string",
                        "description": "The type of School Method (e.g. On Campus, Online)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * on_compus - On Campus\n * online - Online\n * online_and_on_campus - Online and On Campus\n"
                    },
                    "school_program": {
                        "type": "string",
                        "description": "The type of School Program (e.g. Bootcamp, Four Year University)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * bootcamp - Bootcamp\n * community_college - Community College\n * four_year_university - Four Year University\n * graduate_university - Graduate University\n * high_school - High School\n * trade_school - Trade School\n * two_year_university - Two Year University\n"
                    },
                    "school_type": {
                        "type": "string",
                        "description": "The type of school\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * for_profit_private - Private\n * non_profit_private - Private (Non-Profit)\n * public - Public\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text of Organization Description, Industries, and Industry Groups\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of Organization e.g. Operating, Closed, Acquired, IPO\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * closed - Closed\n * ipo - IPO\n * operating - Operating\n * was_acquired - Was Acquired\n"
                    },
                    "stock_exchange_symbol": {
                        "type": "string",
                        "description": "Stock exchange where the Organization is listed e.g. NYSE, NASDAQ\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * adx - ADX - Abu Dhabi Securities Exchange\n * afx - AFX - Afghanistan Stock Exchange\n * altx - ALTX - ALTX East Africa Exchange\n * amex - AMEX - American Stock Exchange\n * ams - AMS - Euronext Amsterdam\n * amx - AMX - Armenia Securities Exchange\n * asce - ASCE - Abuja Securities and Commodities Exchange\n * asx - ASX - Australian Securities Exchange\n * ath - ATH - Athens Stock Exchange\n * bcba - BCBA - Buenos Aires Stock Exchange\n * bdp - BDP - Budapest Stock Exchange\n * belex - BELEX - Belgrade Stock Exchange\n * ber - BER - Berliner Börse\n * bfb - BFB - Baku Stock Exchange\n * bit - BIT - Italian Stock Exchange\n * bkk - BKK - Thailand Stock Exchange\n * blse - BLSE - Banja Luka Stock Exchange\n * bme - BME - Madrid Stock Exchange\n * bmv - BMV - Mexican Stock Exchange\n * bom - BOM - Bombay Stock Exchange\n * brvm - BRVM - Regional Securities Exchange SA\n * bse - BSE - Bulgarian Stock Exchange\n * bse_lb - BSE - Beirut Stock Exchange\n * bsse - BSSE - Bratislava Stock Exchange\n * bsx - BSX - Bermuda Stock Exchange\n * bvb - BVB - Bucharest Stock Exchange\n * bvc - BVC - Colombian Stock Exchange\n * bvfb - BVFB - Belarusian Currency and Stock Exchange\n * bvm - BVM - Montevideo Stock Exchange\n * bvmf - B3 - Brazil Stock Exchange and OTC Market\n * bvmt - BVMT - Tunis Stock Exchange\n * bx - BX - Berne Stock Exchange\n * cas - CAS - Casablanca Stock Exchange\n * cise - CISE - Channel Islands Stock Exchange\n * cnsx - CNSX - Canadian National Stock Exchange\n * col - COL - Colombo Stock Exchange\n * cph - CPH - Copenhagen Stock Exchange\n * cse - CSE - Canadian Securities Exchange\n * cse_cy - CSE - Cyprus Stock Exchange\n * csx - CSX - Cambodia Securities Exchange\n * cve - TSX-V - Toronto TSX Venture Exchange\n * dfm - DFM - Dubai Financial Market\n * dse - DSE - Dhaka Stock Exchange\n * dsx - DSX - Douala Stock Exchange\n * dus - DUS - Börse Düsseldorf\n * ebr - EBR - Euronext Brussels\n * egx - EGX - Egypt Stock Exchange\n * eli - ELI - Euronext Lisbon\n * epa - EPA - Euronext Paris\n * etr - ETR - Deutsche Börse XETRA\n * eurex - EUREX - Eurex Exchange\n * fra - FRA - Frankfurt Stock Exchange\n * fwb - FWB - Börse Frankfurt Stock Exchange\n * gha - GHA - Ghana Stock Exchange\n * gsx - GSX - Georgian Stock Exchange\n * gsx_gi - GSX - Gibraltar Stock Exchange\n * hel - HEL - Helsinki Stock Exchange\n * hkg - HKG - Hong Kong Stock Exchange\n * hnx - HNX - Hanoi Stock Exchange\n * hose - HOSE - Ho Chi Minh Stock Exchange\n * ice - ICE - Iceland Stock Exchange\n * idx - IDX - Indonesia Stock Exchange\n * iex - IEX - Investors Exchange\n * ifb - IFB - Iran Fara Bourse\n * ime - IME - Iran Mercantile Exchange\n * irenex - IRENEX - Iran Energy Exchange\n * ise - ISE - Irish Stock Exchange\n * ist - IST - Istanbul Stock Exchange\n * isx - ISX - Iraq Stock Exchange\n * jp - JP - Japan Exchange\n * jsc - JSC - Belarusian Currency and Stock Exchange\n * jse - JSE - Johannesburg Stock Exchange\n * jse_jam - JSE - Jamaica Stock Exchange\n * kase - KASE - Kazakhstan Stock Exchange\n * klse - KLSE - Malaysia Stock Exchange\n * kosdaq - KOSDAQ - Korean Securities Dealers Automated Quotations\n * krx - KRX - Korea Stock Exchange\n * kse - KSE - Kuwait Stock Exchange\n * lje - LJE - Ljubljana Stock Exchange\n * lse - LSE - London Stock Exchange\n * lsm - LSM - Libyan Stock Market\n * lsx - LSX - Lao Securities Exchange\n * luse - LuSE - Lusaka Securities Exchange\n * luxse - LuxSE - Luxembourg Stock Exchange\n * mal - MAL - Malta Stock Exchange\n * mcx - MCX - Multi Commodity Exchange of India\n * meff - MEFF - Mercado Spanish Financial Futures Market\n * mnse - MNSE - Montenegro Stock Exchange\n * moex - MOEX - Moscow Exchange\n * mse - MSE - Metropolitan Stock Exchange\n * mse_md - MSE - Moldova Stock Exchange\n * mse_mk - MSE - Macedonian Stock Exchange\n * msei - MSEI - Metropolitan Stock Exchange of India\n * msm - MSM - Muscat Securities Market\n * mun - MUN - Börse München\n * nasdaq - NASDAQ\n * nbo - NSE - Nairobi Securities Exchange\n * neeq - NEEQ - National Equities Exchange and Quotations\n * nepse - NEPSE - Nepal Stock Exchange\n * nex - NEX - NEX Exchange\n * ngm - NGM - Nordic Growth Market Exchange\n * nig - NIG - Nigerian Stock Exchange\n * notc - NOTC - Norwegian OTC\n * npex - NPEX - NPEX Stock Exchange\n * nse - NSE - National Stock Exchange of India\n * nsx - NSX - National Stock Exchange of Australia\n * nyse - NYSE - New York Stock Exchange\n * nysearca - NYSEARCA - NYSE Arca\n * nysemkt - NYSEAMERICAN - NYSE American\n * nze - NZE - New Zealand Stock Exchange\n * ose - OSE - Oslo Stock Exchange\n * otcbb - OTCBB - FINRA OTC Bulletin Board\n * otcpink - OTC Pink\n * otcqb - OTCQB\n * otcqx - OTCQX\n * pdex - PDEx - Philippine Dealing Exchange\n * pex - PEX - Palestine Exchange\n * pfts - PFTS - PFTS Ukraine Stock Exchange\n * pomsox - POMSoX - Port Moresby Stock Exchange\n * prg - PRA - Prague Stock Exchange\n * pse - PSE - Philippine Stock Exchange\n * psx - PSX - Pakistan Stock Exchange\n * qse - QSE - Qatar Stock Exchange\n * rfb - RFB - Riga Stock Exchange\n * rse - RSE - Rwanda Stock Exchange\n * rsebl - RSEBL - Royal Securities Exchange of Bhutan\n * sase - SASE - Sarajevo Stock Exchange\n * sbx - SBX - BX Swiss\n * sehk - SEHK - The Stock Exchange of Hong Kong\n * sem - SEM - Stock Exchange of Mauritius\n * sgbv - SGBV - Algiers Stock Exchange\n * sgx - SGX - Singapore Stock Exchange\n * six - SIX - SIX Swiss Exchange\n * spbex - SPBEX - Saint Petersburg Stock Exchange\n * spse - SPSE - South Pacific Stock Exchange\n * sse - SSE - Shanghai Stock Exchange\n * ssx - SSX - Sydney Stock Exchange\n * sto - STO - Stockholm Stock Exchange\n * stu - STU - Börse Stuttgart\n * swx - SWX - SIX Swiss Exchange\n * szse - SZSE - Shenzhen Stock Exchange\n * tadawul - Tadawul - Saudi Stock Exchange\n * tal - TSE - Tallinn Stock Exchange\n * tfex - TFEX - Thailand Futures Exchange\n * tise - TISE - The International Stock Exchange\n * tlv - TLV - Tel Aviv Stock Exchange\n * tpe - TWSE - Taiwan Stock Exchange\n * tse_al - TSE - Tirana Stock Exchange\n * tse_ir - TSE - Tehran Stock Exchange\n * tsec - TWO - Taiwan OTC Exchange\n * tsx - TSX - Toronto Stock Exchange\n * ttse - TTSE - Trinidad and Tobago Stock Exchange\n * tyo - TYO - Tokyo Stock Exchange\n * use - USE - Uganda Securities Exchange\n * ux - UX - Ukrainian Exchange\n * vie - VIE - Vienna Stock Exchange\n * vmf - VMF - Faroese Securities Market\n * vse - VSE - Vancouver Stock Exchange\n * wse - WSE - Warsaw Stock Exchange\n * ysx - YSX - Yangon Stock Exchange\n * zamace - ZAMACE - Zambian Commodity Exchange\n * zse - ZSE - Zimbabwe Stock Exchange\n * zse_hr - ZSE - Zagreb Stock Exchange\n"
                    },
                    "stock_symbol": {
                        "description": "Stock ticker symbol (e.g. AAPL, FB, TWTR)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "twitter": {
                        "description": "Link to Organization's Twitter page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    },
                    "valuation": {
                        "description": "Latest post money valuation of organization\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "valuation_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of latest post money valuation\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "website": {
                        "description": "Link to homepage. note: website_url has replaced this field; this field will be deprecated in the near future\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "website_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Link to homepage\\\nField Type: url\\\nSearchable: Yes\\\nSearch Operators: domain_blank, domain_eq, domain_includes, not_domain_eq, not_domain_includes\n"
                    },
                    "went_public_on": {
                        "type": "string",
                        "format": "date",
                        "description": "The date when the Organization went public\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    }
                }
            },
            "OrganizationSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Organization entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Organization" }
                    }
                }
            },
            "Person": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "Alternate or previous names for the individual\\\nField Type: text_short_multi\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "born_on": {
                        "type": "string",
                        "format": "date",
                        "description": "The birthdate of the person\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text from a Person's biography\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "died_on": {
                        "type": "string",
                        "format": "date",
                        "description": "The date when a person died\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * person - Person\n"
                    },
                    "facebook": {
                        "description": "Link to a Person's Facebook page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "facet_ids": {
                        "type": "array",
                        "description": "Field Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* investor - Investor\n"
                        }
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "First name of a Person\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "gender": {
                        "type": "string",
                        "description": "A Person's gender\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * agender - Agender\n * androgyne - Androgyne\n * androgynous - Androgynous\n * bigender - Bigender\n * female - Female\n * ftm - Female to Male (FTM)\n * gender_fluid - Gender Fluid\n * gender_nonconforming - Gender Nonconforming\n * gender_questioning - Gender Questioning\n * gender_variant - Gender Variant\n * genderqueer - Genderqueer\n * male - Male\n * mtf - Male to Female (MTF)\n * neutrois - Neutrois\n * non_binary - Non-Binary\n * not_provided - Prefer not to identify\n * other - Other\n * pangender - Pangender\n * transfeminine - Transfeminine\n * transgender_female - Transgender Female\n * transgender_male - Transgender Male\n * transgender_man - Transgender Man\n * transgender_person - Transgender Person\n * transgender_woman - Transgender Woman\n * transmasculine - Transmasculine\n * transsexual_female - Transsexual Female\n * transsexual_male - Transsexual Male\n * transsexual_man - Transsexual Man\n * transsexual_person - Transsexual Person\n * transsexual_woman - Transsexual Woman\n * two_spirit - Two-Spirit\n"
                    },
                    "identifier": {
                        "description": "First and last name of a Person\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "image_id": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The profile image of the person on Crunchbase\\\nField Type: image_id\\\nSearchable: No\n"
                    },
                    "image_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The cloudinary url of the profile image\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "investor_stage": {
                        "type": "array",
                        "description": "This describes the stage of investor this person is (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* convertible_note - Convertible Note\n* crowdfunding - Crowdfunding\n* debt - Debt\n* early_stage_venture - Early Stage Venture\n* grant - Grant\n* initial_coin_offering - Initial Coin Offering\n* late_stage_venture - Late Stage Venture\n* non_equity_assistance - Non Equity Assistance\n* post_ipo - Post-Ipo\n* private_equity - Private Equity\n* secondary_market - Secondary Market\n* seed - Seed\n* venture - Venture\n"
                        }
                    },
                    "investor_type": {
                        "type": "array",
                        "description": "This describes the type of investor the person is (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* angel - Individual/Angel\n* investment_partner - Investment Partner\n"
                        }
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Last name of a Person\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "layout_id": {
                        "type": "string",
                        "description": "This is the auto-generated layout for the profile\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * investor - Investor Layout\n"
                    },
                    "linkedin": {
                        "description": "Link to a Person's LinkedIn page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "location_group_identifiers": {
                        "type": "array",
                        "description": "Where the person is located (e.g. San Francisco Bay Area, Silicon Valley)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "location_identifiers": {
                        "type": "array",
                        "description": "Where the person is located (e.g. Europe, Menlo Park, China)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "middle_name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Middle name of a Person\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Full name of a Person\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "num_articles": {
                        "type": "number",
                        "description": "Number of news articles that reference the Person\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_current_advisor_jobs": {
                        "type": "number",
                        "description": "Total number of current Advisors and Board roles the person has\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_current_jobs": {
                        "type": "number",
                        "description": "Total number of current Jobs the person has\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_diversity_spotlight_investments": {
                        "type": "number",
                        "description": "Total number of diversity investments made by an investor\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_event_appearances": {
                        "type": "number",
                        "description": "Total number of events the individual appeared in\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_exits": {
                        "type": "number",
                        "description": "Total number of Exits\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_exits_ipo": {
                        "type": "number",
                        "description": "Total number of Exits (IPO)\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_founded_organizations": {
                        "type": "number",
                        "description": "Number of Organizations that the person founded\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_investments": {
                        "type": "number",
                        "description": "Number of Investments the Individual has participated in\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_jobs": {
                        "type": "number",
                        "description": "Field Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_lead_investments": {
                        "type": "number",
                        "description": "Number of Investments led by the Individual\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_partner_investments": {
                        "type": "number",
                        "description": "Number of Investments the Individual has partnered in\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_past_advisor_jobs": {
                        "type": "number",
                        "description": "Total number of past Board and Advisor roles the person has\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_past_jobs": {
                        "type": "number",
                        "description": "Total number of past Jobs the person has\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_portfolio_organizations": {
                        "type": "number",
                        "description": "Number of portfolio companies associated to the Person\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "override_layout_id": {
                        "type": "string",
                        "description": "Override the layout of the Entity Profile\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * default - Default Layout\n * investor - Investor Layout\n"
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "permalink_aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "These are the alternative aliases to the primary permalink of the Organization\\\nField Type: text_exact_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "primary_job_title": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The person's primary job title\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "primary_organization": {
                        "description": "The organization associated to the person's primary job\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "rank_delta_d30": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 30 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_delta_d7": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 7 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_delta_d90": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 90 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_person": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active People\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_principal": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active Organizations and People\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text of Person Description, Industries, and Industry Groups\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "twitter": {
                        "description": "Link to a Person's Twitter page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    },
                    "website": {
                        "description": "Link to a Person's website. note: website_url has replaced this field; this field will be deprecated in the near future\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "website_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Link to a Person's website\\\nField Type: url\\\nSearchable: Yes\\\nSearch Operators: domain_blank, domain_eq, domain_includes, not_domain_eq, not_domain_includes\n"
                    }
                }
            },
            "PersonSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Person entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Person" }
                    }
                }
            },
            "FundingRound": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "announced_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Date that the Funding Round was publicly announced\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "closed_on": {
                        "description": "Date that the Funding Round was closed\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * funding_round - Funding Round\n"
                    },
                    "funded_organization_categories": {
                        "type": "array",
                        "description": "Industries of the organization that got funded\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "funded_organization_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Description of the organization that got funded\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "funded_organization_diversity_spotlights": {
                        "type": "array",
                        "description": "Types of diversity represented in an organization, specifically of those who are founding members, currently the CEO, or have check-writing abilities in an investment firm. This feature is in beta and may change with future updates.\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "funded_organization_funding_stage": {
                        "type": "string",
                        "description": "Organization's most recent funding status\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * early_stage_venture - Early Stage Venture\n * ipo - IPO\n * late_stage_venture - Late Stage Venture\n * m_and_a - M&A\n * private_equity - Private Equity\n * seed - Seed\n"
                    },
                    "funded_organization_funding_total": {
                        "description": "Total funding amount raised across all Funding Rounds\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "funded_organization_identifier": {
                        "description": "Name of the organization that got funded\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "funded_organization_location": {
                        "type": "array",
                        "description": "Location of the organization that got funded\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "funded_organization_revenue_range": {
                        "type": "string",
                        "description": "Revenue range of the organization that got funded\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * r_00000000 - Less than $1M\n * r_00001000 - $1M to $10M\n * r_00010000 - $10M to $50M\n * r_00050000 - $50M to $100M\n * r_00100000 - $100M to $500M\n * r_00500000 - $500M to $1B\n * r_01000000 - $1B to $10B\n * r_10000000 - $10B+\n"
                    },
                    "identifier": {
                        "description": "Auto-generated name of transaction (e.g. Angel - Uber)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "image_id": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: image_id\\\nSearchable: No\n"
                    },
                    "investment_stage": {
                        "type": "string",
                        "description": "The funding stage of a funding round\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * early_stage_venture - Early Stage Venture\n * late_stage_venture - Late Stage Venture\n * private_equity - Private Equity\n * seed - Seed\n"
                    },
                    "investment_type": {
                        "type": "string",
                        "description": "Type of Funding Round (e.g. Seed, Series A, Private Equity, Debt Financing)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * angel - Angel\n * convertible_note - Convertible Note\n * corporate_round - Corporate Round\n * debt_financing - Debt Financing\n * equity_crowdfunding - Equity Crowdfunding\n * grant - Grant\n * initial_coin_offering - Initial Coin Offering\n * non_equity_assistance - Non-equity Assistance\n * post_ipo_debt - Post-IPO Debt\n * post_ipo_equity - Post-IPO Equity\n * post_ipo_secondary - Post-IPO Secondary\n * pre_seed - Pre-Seed\n * private_equity - Private Equity\n * product_crowdfunding - Product Crowdfunding\n * secondary_market - Secondary Market\n * seed - Seed\n * series_a - Series A\n * series_b - Series B\n * series_c - Series C\n * series_d - Series D\n * series_e - Series E\n * series_f - Series F\n * series_g - Series G\n * series_h - Series H\n * series_i - Series I\n * series_j - Series J\n * series_unknown - Venture - Series Unknown\n * undisclosed - Funding Round\n"
                    },
                    "investor_identifiers": {
                        "type": "array",
                        "description": "Names of all investors who invested in the funding round\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "is_equity": {
                        "type": "boolean",
                        "description": "This indicates whether the Funding Round is financed only through equity.\\\nField Type: boolean\\\nSearchable: Yes\\\nSearch Operators: blank, eq\n"
                    },
                    "lead_investor_identifiers": {
                        "type": "array",
                        "description": "Name of the investor who led the investment in the funding round\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "money_raised": {
                        "description": "Amount of money raised in Funding Round\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "num_investors": {
                        "type": "number",
                        "description": "Total number of Investors in a Funding Round\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_partners": {
                        "type": "number",
                        "description": "Total number of Partner Investors in a Funding Round\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "post_money_valuation": {
                        "description": "Valuation of a Company after a Funding Round\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "pre_money_valuation": {
                        "description": "Valuation of a Company prior to a Funding Round\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "rank_funding_round": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active Funding Rounds\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Short description of the Funding Round\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "target_money_raised": {
                        "description": "Amount of money the funded Organization would like to raised in the Funding Round\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "FundingRoundSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Funding Round entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/FundingRound" }
                    }
                }
            },
            "Acquisition": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "acquiree_categories": {
                        "type": "array",
                        "description": "Keyword, sector, or industry\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "acquiree_funding_total": {
                        "description": "Total funding amount raised across all acquired organization's funding rounds\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "acquiree_identifier": {
                        "description": "Name of the acquired organization\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "acquiree_last_funding_type": {
                        "type": "string",
                        "description": "Last funding round type (e.g. Series A, Seed, Private Equity)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * angel - Angel\n * convertible_note - Convertible Note\n * corporate_round - Corporate Round\n * debt_financing - Debt Financing\n * equity_crowdfunding - Equity Crowdfunding\n * grant - Grant\n * initial_coin_offering - Initial Coin Offering\n * non_equity_assistance - Non-equity Assistance\n * post_ipo_debt - Post-IPO Debt\n * post_ipo_equity - Post-IPO Equity\n * post_ipo_secondary - Post-IPO Secondary\n * pre_seed - Pre-Seed\n * private_equity - Private Equity\n * product_crowdfunding - Product Crowdfunding\n * secondary_market - Secondary Market\n * seed - Seed\n * series_a - Series A\n * series_b - Series B\n * series_c - Series C\n * series_d - Series D\n * series_e - Series E\n * series_f - Series F\n * series_g - Series G\n * series_h - Series H\n * series_i - Series I\n * series_j - Series J\n * series_unknown - Venture - Series Unknown\n * undisclosed - Undisclosed\n"
                    },
                    "acquiree_locations": {
                        "type": "array",
                        "description": "Where the acquired organization is headquartered\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "acquiree_num_funding_rounds": {
                        "type": "number",
                        "description": "Acquired organization's total number of funding rounds\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "acquiree_revenue_range": {
                        "type": "string",
                        "description": "Estimated revenue range for acquired organization\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * r_00000000 - Less than $1M\n * r_00001000 - $1M to $10M\n * r_00010000 - $10M to $50M\n * r_00050000 - $50M to $100M\n * r_00100000 - $100M to $500M\n * r_00500000 - $500M to $1B\n * r_01000000 - $1B to $10B\n * r_10000000 - $10B+\n"
                    },
                    "acquiree_short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text of acquired organization's description, industries, and industry groups\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "acquirer_categories": {
                        "type": "array",
                        "description": "Keyword, sector, or industry\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "acquirer_funding_stage": {
                        "type": "string",
                        "description": "Acquiring organization's most recent funding status\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * early_stage_venture - Early Stage Venture\n * ipo - IPO\n * late_stage_venture - Late Stage Venture\n * m_and_a - M&A\n * private_equity - Private Equity\n * seed - Seed\n"
                    },
                    "acquirer_funding_total": {
                        "description": "Total funding amount raised across all acquiring organization's funding rounds\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "acquirer_identifier": {
                        "description": "Name of the acquiring organization\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "acquirer_locations": {
                        "type": "array",
                        "description": "Where the organization is headquartered\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "acquirer_num_funding_rounds": {
                        "type": "number",
                        "description": "Acquiring organization's total number of funding rounds\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "acquirer_revenue_range": {
                        "type": "string",
                        "description": "Estimated revenue range for acquiring organization\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * r_00000000 - Less than $1M\n * r_00001000 - $1M to $10M\n * r_00010000 - $10M to $50M\n * r_00050000 - $50M to $100M\n * r_00100000 - $100M to $500M\n * r_00500000 - $500M to $1B\n * r_01000000 - $1B to $10B\n * r_10000000 - $10B+\n"
                    },
                    "acquirer_short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text of acquiring organization's description, industries, and industry groups\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "acquisition_type": {
                        "type": "string",
                        "description": "Type of acquisition\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * acquihire - Acquihire\n * acquisition - Acquisition\n * lbo - Leveraged Buyout\n * management_buyout - Management Buyout\n * merge - Merger\n"
                    },
                    "announced_on": {
                        "description": "Date the acquisition was announced\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "completed_on": {
                        "description": "Date the Acquisition was completed\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "disposition_of_acquired": {
                        "type": "string",
                        "description": "How is the acquired Organization structured after the acquisition\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * combined - Combined\n * division - Division\n * product - Product\n * separate_entity - Separate Entity\n * subsidiary - Subsidiary\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * acquisition - Acquisition\n"
                    },
                    "identifier": {
                        "description": "Auto-generated name of transaction (e.g. WhatsApp acquired by Facebook)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "price": {
                        "description": "Price of the acquisition\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "rank_acquisition": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active Acquisitions\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Short description of the Acquisition\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of the acquisition\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * complete - Complete\n * pending - Pending\n"
                    },
                    "terms": {
                        "type": "string",
                        "description": "Terms of the acquisition\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * cash - Cash\n * cash_and_stock - Cash & Stock\n * stock - Stock\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "AcquisitionSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Acquisition entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Acquisition" }
                    }
                }
            },
            "Investment": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "announced_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Date when the Investment is announced\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * investment - Investment\n"
                    },
                    "funding_round_identifier": {
                        "description": "Name of the funding round where the Investment is made\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "funding_round_investment_type": {
                        "type": "string",
                        "description": "Type of Funding Round where the Investment is made (e.g. Seed, Series A, Private Equity, Debt Financing)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * angel - Angel\n * convertible_note - Convertible Note\n * corporate_round - Corporate Round\n * debt_financing - Debt Financing\n * equity_crowdfunding - Equity Crowdfunding\n * grant - Grant\n * initial_coin_offering - Initial Coin Offering\n * non_equity_assistance - Non-equity Assistance\n * post_ipo_debt - Post-IPO Debt\n * post_ipo_equity - Post-IPO Equity\n * post_ipo_secondary - Post-IPO Secondary\n * pre_seed - Pre-Seed\n * private_equity - Private Equity\n * product_crowdfunding - Product Crowdfunding\n * secondary_market - Secondary Market\n * seed - Seed\n * series_a - Series A\n * series_b - Series B\n * series_c - Series C\n * series_d - Series D\n * series_e - Series E\n * series_f - Series F\n * series_g - Series G\n * series_h - Series H\n * series_i - Series I\n * series_j - Series J\n * series_unknown - Venture - Series Unknown\n * undisclosed - Funding Round\n"
                    },
                    "funding_round_money_raised": {
                        "description": "Amount of money raised in Funding Round\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "identifier": {
                        "description": "Investment description coming soon\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "investor_identifier": {
                        "description": "Name of the investor who participated in the Investment\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "investor_stage": {
                        "type": "array",
                        "description": "This describes the stage of investor this organization or person is (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* convertible_note - Convertible Note\n* crowdfunding - Crowdfunding\n* debt - Debt\n* early_stage_venture - Early Stage Venture\n* grant - Grant\n* initial_coin_offering - Initial Coin Offering\n* late_stage_venture - Late Stage Venture\n* non_equity_assistance - Non Equity Assistance\n* post_ipo - Post-Ipo\n* private_equity - Private Equity\n* secondary_market - Secondary Market\n* seed - Seed\n* venture - Venture\n"
                        }
                    },
                    "investor_type": {
                        "type": "array",
                        "description": "This describes the type of investor this organization or person is (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* accelerator - Accelerator\n* angel - Individual/Angel\n* angel_group - Angel Group\n* co_working_space - Co-Working Space\n* corporate_venture_capital - Corporate Venture Capital\n* entrepreneurship_program - Entrepreneurship Program\n* family_investment_office - Family Investment Office\n* fund_of_funds - Fund Of Funds\n* government_office - Government Office\n* hedge_fund - Hedge Fund\n* incubator - Incubator\n* investment_bank - Investment Bank\n* investment_partner - Investment Partner\n* micro_vc - Micro VC\n* pension_funds - Pension Funds\n* private_equity_firm - Private Equity Firm\n* secondary_purchaser - Secondary Purchaser\n* startup_competition - Startup Competition\n* syndicate - Syndicate\n* university_program - University Program\n* venture_capital - Venture Capital\n* venture_debt - Venture Debt\n"
                        }
                    },
                    "is_lead_investor": {
                        "type": "boolean",
                        "description": "This field indicates whether an investor led/organized the investment\\\nField Type: boolean\\\nSearchable: Yes\\\nSearch Operators: blank, eq\n"
                    },
                    "money_invested": {
                        "description": "Amount of money an Investor contributed into an investment\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "organization_diversity_spotlights": {
                        "type": "array",
                        "description": "Types of diversity represented in an organization, specifically of those who are founding members, currently the CEO, or have check-writing abilities in an investment firm. This feature is in beta and may change with future updates.\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "organization_identifier": {
                        "description": "Name of the organization that received the investment\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "partner_identifiers": {
                        "type": "array",
                        "description": "Name of the individual who led a funding round for his/her firm\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "InvestmentSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Investment entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Investment" }
                    }
                }
            },
            "Event": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "categories": {
                        "type": "array",
                        "description": "Descriptive keyword for a Company (e.g. SaaS, Android, Cloud Computing, Medical Device)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "category_groups": {
                        "type": "array",
                        "description": "Superset of Industries (e.g. Software, Mobile, Health Care)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text from Event's description\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "ends_on": {
                        "type": "string",
                        "format": "date",
                        "description": "End date of the Event\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * event - Event\n"
                    },
                    "event_type": {
                        "type": "array",
                        "description": "Type of Event (e.g. hackathon, meetup, conference)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* class - Class\n* competition - Competition\n* conference - Conference\n* demo_day - Demo Day\n* expo - Expo\n* festival - Festival\n* hackathon - Hackathon\n* meetup - Meetup\n* networking - Networking\n* other - Other\n* seminar - Seminar\n* virtual - Virtual\n* webinar - Webinar\n"
                        }
                    },
                    "event_url": {
                        "description": "Link to main Event page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "identifier": {
                        "description": "Name of the Event\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "image_id": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The profile image of the event on Crunchbase\\\nField Type: image_id\\\nSearchable: No\n"
                    },
                    "image_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The cloudinary url of the profile image\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "location_group_identifiers": {
                        "type": "array",
                        "description": "Regions of the Event (e.g. San Francisco Bay Area, Silicon Valley)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "location_identifiers": {
                        "type": "array",
                        "description": "Location of the Event (e.g. Japan, San Francisco, Europe, Asia)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Event Name\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "num_contestants": {
                        "type": "number",
                        "description": "Total number of Contestants at the Event\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_exhibitors": {
                        "type": "number",
                        "description": "Total number of Exhibitors at the Event\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_organizers": {
                        "type": "number",
                        "description": "Total number of Organizers at the Event\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_speakers": {
                        "type": "number",
                        "description": "Total number of Speakers at the Event\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_sponsors": {
                        "type": "number",
                        "description": "Total number of Sponsors for the Event\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "organizer_identifiers": {
                        "type": "array",
                        "description": "The organizer of the Event\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "permalink_aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "These are the alternative aliases to the primary permalink of the Organization\\\nField Type: text_exact_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "rank_event": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active Events\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "registration_url": {
                        "description": "Link to the Event registration page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "A short description of the Event\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "starts_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the Event\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    },
                    "venue_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Name of the Event venue\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    }
                }
            },
            "EventSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Event entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Event" }
                    }
                }
            },
            "PressReference": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "activity_entities": {
                        "type": "array",
                        "description": "Entities mentioned in the press reference\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "author": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The author of the press reference\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * press_reference - Press Reference\n"
                    },
                    "identifier": {
                        "description": "Name of the Article\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "posted_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Date when the press reference is posted\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "publisher": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The publisher of the press reference\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "thumbnail_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The title of the press reference\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "url": {
                        "description": "The URL of the press reference\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "PressReferenceSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Press Reference entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PressReference"
                        }
                    }
                }
            },
            "Fund": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "announced_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Date when a fund raised is announced\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * fund - Fund\n"
                    },
                    "identifier": {
                        "description": "Name of the Fund\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "image_id": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: image_id\\\nSearchable: No\n"
                    },
                    "investor_identifiers": {
                        "type": "array",
                        "description": "Field Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "money_raised": {
                        "description": "Amount raised by the Fund\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Name of the Fund\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "num_investors": {
                        "type": "number",
                        "description": "Total number of investment firms and individual investors\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "owner_identifier": {
                        "description": "Name of the fund owner\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "A short description of the Fund\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "started_on": {
                        "description": "Date when Fund Owner started invested the Fund\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "FundSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Fund entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Fund" }
                    }
                }
            },
            "EventAppearance": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "appearance_type": {
                        "type": "string",
                        "description": "Describe how an Organization or a Person is participating in an Event (e.g. Speaker, Sponsor, etc.)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * contestant - Contestant\n * exhibitor - Exhibitor\n * organizer - Organizer\n * speaker - Speaker\n * sponsor - Sponsor\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * event_appearance - Event Appearance\n"
                    },
                    "event_identifier": {
                        "description": "Name of the Event\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "event_location_identifiers": {
                        "type": "array",
                        "description": "Location of the Event (e.g. Japan, San Francisco, Europe, Asia)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "event_starts_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Start date of the Event\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "identifier": {
                        "description": "Name of the Event Appearance\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "participant_identifier": {
                        "description": "The name of the participant in an Event\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "A short description of how a person or an organization is participant in an Event\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "EventAppearanceSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Event Appearance entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventAppearance"
                        }
                    }
                }
            },
            "Ipo": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "amount_raised": {
                        "description": "Total amount raised from the IPO\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "delisted_on": {
                        "description": "Date when the organization delisted its stock\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * ipo - Ipo\n"
                    },
                    "identifier": {
                        "description": "Stock ticker symbol (e.g. AAPL, FB, TWTR)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "image_id": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: image_id\\\nSearchable: No\n"
                    },
                    "organization_identifier": {
                        "description": "Organization went public\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "rank_ipo": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active IPOs\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "share_price": {
                        "description": "The share price for the stock at the time of IPO\\\nField Type: money_decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/MoneyDecimal" }
                        ]
                    },
                    "shares_outstanding": {
                        "type": "number",
                        "description": "Number of shares that were outstanding at the time of IPO\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "shares_sold": {
                        "type": "number",
                        "description": "Number of shares sold at the time of IPO\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "stock_exchange_symbol": {
                        "type": "string",
                        "description": "Stock exchange where the Organization is listed (e.g. NYSE, NASDAQ)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * adx - ADX - Abu Dhabi Securities Exchange\n * afx - AFX - Afghanistan Stock Exchange\n * altx - ALTX - ALTX East Africa Exchange\n * amex - AMEX - American Stock Exchange\n * ams - AMS - Euronext Amsterdam\n * amx - AMX - Armenia Securities Exchange\n * asce - ASCE - Abuja Securities and Commodities Exchange\n * asx - ASX - Australian Securities Exchange\n * ath - ATH - Athens Stock Exchange\n * bcba - BCBA - Buenos Aires Stock Exchange\n * bdp - BDP - Budapest Stock Exchange\n * belex - BELEX - Belgrade Stock Exchange\n * ber - BER - Berliner Börse\n * bfb - BFB - Baku Stock Exchange\n * bit - BIT - Italian Stock Exchange\n * bkk - BKK - Thailand Stock Exchange\n * blse - BLSE - Banja Luka Stock Exchange\n * bme - BME - Madrid Stock Exchange\n * bmv - BMV - Mexican Stock Exchange\n * bom - BOM - Bombay Stock Exchange\n * brvm - BRVM - Regional Securities Exchange SA\n * bse - BSE - Bulgarian Stock Exchange\n * bse_lb - BSE - Beirut Stock Exchange\n * bsse - BSSE - Bratislava Stock Exchange\n * bsx - BSX - Bermuda Stock Exchange\n * bvb - BVB - Bucharest Stock Exchange\n * bvc - BVC - Colombian Stock Exchange\n * bvfb - BVFB - Belarusian Currency and Stock Exchange\n * bvm - BVM - Montevideo Stock Exchange\n * bvmf - B3 - Brazil Stock Exchange and OTC Market\n * bvmt - BVMT - Tunis Stock Exchange\n * bx - BX - Berne Stock Exchange\n * cas - CAS - Casablanca Stock Exchange\n * cise - CISE - Channel Islands Stock Exchange\n * cnsx - CNSX - Canadian National Stock Exchange\n * col - COL - Colombo Stock Exchange\n * cph - CPH - Copenhagen Stock Exchange\n * cse - CSE - Canadian Securities Exchange\n * cse_cy - CSE - Cyprus Stock Exchange\n * csx - CSX - Cambodia Securities Exchange\n * cve - TSX-V - Toronto TSX Venture Exchange\n * dfm - DFM - Dubai Financial Market\n * dse - DSE - Dhaka Stock Exchange\n * dsx - DSX - Douala Stock Exchange\n * dus - DUS - Börse Düsseldorf\n * ebr - EBR - Euronext Brussels\n * egx - EGX - Egypt Stock Exchange\n * eli - ELI - Euronext Lisbon\n * epa - EPA - Euronext Paris\n * etr - ETR - Deutsche Börse XETRA\n * eurex - EUREX - Eurex Exchange\n * fra - FRA - Frankfurt Stock Exchange\n * fwb - FWB - Börse Frankfurt Stock Exchange\n * gha - GHA - Ghana Stock Exchange\n * gsx - GSX - Georgian Stock Exchange\n * gsx_gi - GSX - Gibraltar Stock Exchange\n * hel - HEL - Helsinki Stock Exchange\n * hkg - HKG - Hong Kong Stock Exchange\n * hnx - HNX - Hanoi Stock Exchange\n * hose - HOSE - Ho Chi Minh Stock Exchange\n * ice - ICE - Iceland Stock Exchange\n * idx - IDX - Indonesia Stock Exchange\n * iex - IEX - Investors Exchange\n * ifb - IFB - Iran Fara Bourse\n * ime - IME - Iran Mercantile Exchange\n * irenex - IRENEX - Iran Energy Exchange\n * ise - ISE - Irish Stock Exchange\n * ist - IST - Istanbul Stock Exchange\n * isx - ISX - Iraq Stock Exchange\n * jp - JP - Japan Exchange\n * jsc - JSC - Belarusian Currency and Stock Exchange\n * jse - JSE - Johannesburg Stock Exchange\n * jse_jam - JSE - Jamaica Stock Exchange\n * kase - KASE - Kazakhstan Stock Exchange\n * klse - KLSE - Malaysia Stock Exchange\n * kosdaq - KOSDAQ - Korean Securities Dealers Automated Quotations\n * krx - KRX - Korea Stock Exchange\n * kse - KSE - Kuwait Stock Exchange\n * lje - LJE - Ljubljana Stock Exchange\n * lse - LSE - London Stock Exchange\n * lsm - LSM - Libyan Stock Market\n * lsx - LSX - Lao Securities Exchange\n * luse - LuSE - Lusaka Securities Exchange\n * luxse - LuxSE - Luxembourg Stock Exchange\n * mal - MAL - Malta Stock Exchange\n * mcx - MCX - Multi Commodity Exchange of India\n * meff - MEFF - Mercado Spanish Financial Futures Market\n * mnse - MNSE - Montenegro Stock Exchange\n * moex - MOEX - Moscow Exchange\n * mse - MSE - Metropolitan Stock Exchange\n * mse_md - MSE - Moldova Stock Exchange\n * mse_mk - MSE - Macedonian Stock Exchange\n * msei - MSEI - Metropolitan Stock Exchange of India\n * msm - MSM - Muscat Securities Market\n * mun - MUN - Börse München\n * nasdaq - NASDAQ\n * nbo - NSE - Nairobi Securities Exchange\n * neeq - NEEQ - National Equities Exchange and Quotations\n * nepse - NEPSE - Nepal Stock Exchange\n * nex - NEX - NEX Exchange\n * ngm - NGM - Nordic Growth Market Exchange\n * nig - NIG - Nigerian Stock Exchange\n * notc - NOTC - Norwegian OTC\n * npex - NPEX - NPEX Stock Exchange\n * nse - NSE - National Stock Exchange of India\n * nsx - NSX - National Stock Exchange of Australia\n * nyse - NYSE - New York Stock Exchange\n * nysearca - NYSEARCA - NYSE Arca\n * nysemkt - NYSEAMERICAN - NYSE American\n * nze - NZE - New Zealand Stock Exchange\n * ose - OSE - Oslo Stock Exchange\n * otcbb - OTCBB - FINRA OTC Bulletin Board\n * otcpink - OTC Pink\n * otcqb - OTCQB\n * otcqx - OTCQX\n * pdex - PDEx - Philippine Dealing Exchange\n * pex - PEX - Palestine Exchange\n * pfts - PFTS - PFTS Ukraine Stock Exchange\n * pomsox - POMSoX - Port Moresby Stock Exchange\n * prg - PRA - Prague Stock Exchange\n * pse - PSE - Philippine Stock Exchange\n * psx - PSX - Pakistan Stock Exchange\n * qse - QSE - Qatar Stock Exchange\n * rfb - RFB - Riga Stock Exchange\n * rse - RSE - Rwanda Stock Exchange\n * rsebl - RSEBL - Royal Securities Exchange of Bhutan\n * sase - SASE - Sarajevo Stock Exchange\n * sbx - SBX - BX Swiss\n * sehk - SEHK - The Stock Exchange of Hong Kong\n * sem - SEM - Stock Exchange of Mauritius\n * sgbv - SGBV - Algiers Stock Exchange\n * sgx - SGX - Singapore Stock Exchange\n * six - SIX - SIX Swiss Exchange\n * spbex - SPBEX - Saint Petersburg Stock Exchange\n * spse - SPSE - South Pacific Stock Exchange\n * sse - SSE - Shanghai Stock Exchange\n * ssx - SSX - Sydney Stock Exchange\n * sto - STO - Stockholm Stock Exchange\n * stu - STU - Börse Stuttgart\n * swx - SWX - SIX Swiss Exchange\n * szse - SZSE - Shenzhen Stock Exchange\n * tadawul - Tadawul - Saudi Stock Exchange\n * tal - TSE - Tallinn Stock Exchange\n * tfex - TFEX - Thailand Futures Exchange\n * tise - TISE - The International Stock Exchange\n * tlv - TLV - Tel Aviv Stock Exchange\n * tpe - TWSE - Taiwan Stock Exchange\n * tse_al - TSE - Tirana Stock Exchange\n * tse_ir - TSE - Tehran Stock Exchange\n * tsec - TWO - Taiwan OTC Exchange\n * tsx - TSX - Toronto Stock Exchange\n * ttse - TTSE - Trinidad and Tobago Stock Exchange\n * tyo - TYO - Tokyo Stock Exchange\n * use - USE - Uganda Securities Exchange\n * ux - UX - Ukrainian Exchange\n * vie - VIE - Vienna Stock Exchange\n * vmf - VMF - Faroese Securities Market\n * vse - VSE - Vancouver Stock Exchange\n * wse - WSE - Warsaw Stock Exchange\n * ysx - YSX - Yangon Stock Exchange\n * zamace - ZAMACE - Zambian Commodity Exchange\n * zse - ZSE - Zimbabwe Stock Exchange\n * zse_hr - ZSE - Zagreb Stock Exchange\n"
                    },
                    "stock_full_symbol": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "stock_symbol": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Stock ticker symbol (e.g. AAPL, FB, TWTR)\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    },
                    "valuation": {
                        "description": "Valuation of the Organization at IPO\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "went_public_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Date the Organization went public\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    }
                }
            },
            "IpoSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Ipo entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Ipo" }
                    }
                }
            },
            "Ownership": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * ownership - Ownership\n"
                    },
                    "identifier": {
                        "description": "Short description of the ownership (e.g. Google owns YouTube)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "ownee_identifier": {
                        "description": "Name of the sub-organization that is related to a parent organization\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "owner_identifier": {
                        "description": "Name of the organization that has sub-organizations\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "ownership_type": {
                        "type": "string",
                        "description": "This is the relationship defining how a sub-organization is related to a parent organization\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * affiliated_company - Affiliated Company\n * division - Division\n * investment_arm - Investment Arm\n * joint_venture - Joint Venture\n * subsidiary - Subsidiary\n"
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "OwnershipSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Ownership entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Ownership" }
                    }
                }
            },
            "Category": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "category_groups": {
                        "type": "array",
                        "description": "Superset of Industries (e.g. Software, Mobile, Health Care)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * category - Industry\n"
                    },
                    "identifier": {
                        "description": "Descriptive keyword for a Company (e.g. SaaS, Android, Cloud Computing, Medical Device)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Descriptive name of the Industry Group\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "CategorySearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Category entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Category" }
                    }
                }
            },
            "CategoryGroup": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "categories": {
                        "type": "array",
                        "description": "Descriptive keyword for an Organization (e.g. SaaS, Android, Cloud Computing, Medical Device)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * category_group - Industry Group\n"
                    },
                    "identifier": {
                        "description": "Superset of Industries (e.g. Software, Mobile, Health Care)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Descriptive name of the Industry Group\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "CategoryGroupSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Category Group entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryGroup"
                        }
                    }
                }
            },
            "Location": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "country_code": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Short alphabetic or numeric geographical codes that represent countries (e.g. TWN, USA, ZAF)\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "country_code_ext": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Created At\\\nField Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * location - Location\n"
                    },
                    "facet_ids": {
                        "type": "array",
                        "description": "Type of location (e.g. City, Continent, Regional Area)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* city - City\n* continent - Continent\n* country - Country\n* group - Regional Area\n* region - Region\n"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "description": "Regional areas this location belongs to (e.g. San Francisco Bay Area, Silicon Valley)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "identifier": {
                        "description": "Short location name (e.g. Japan, San Francisco, Europe)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocationIdentifier"
                            }
                        ]
                    },
                    "locations": {
                        "type": "array",
                        "description": "Full location name (e.g. Denver, Colorado, United States, North America)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "permalink_aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "These are the alternative aliases to the primary permalink of the Organization\\\nField Type: text_exact_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "region_code": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Region code used to define location\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Description\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Updated At\\\nField Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "LocationSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Location entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Location" }
                    }
                }
            },
            "Job": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "employee_featured_order": {
                        "type": "number",
                        "description": "These are the featured employees of an organization\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "ended_on": {
                        "description": "End date of the Person's Job\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * job - Job\n"
                    },
                    "identifier": {
                        "description": "Position name field (e.g. Steve Jobs, Founder @ Pixar)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "is_current": {
                        "type": "boolean",
                        "description": "This indicates whether the Job is current or not\\\nField Type: boolean\\\nSearchable: Yes\\\nSearch Operators: blank, eq\n"
                    },
                    "job_type": {
                        "type": "string",
                        "description": "Select a job type that best represent your role at the organization\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * advisor - Advisor\n * board_member - Board Member\n * board_observer - Board Observer\n * employee - Non-Executive Employee\n * executive - Executive\n"
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "organization_identifier": {
                        "description": "This is the name of the organization\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "person_identifier": {
                        "description": "First and last name of a Person\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text of Job Description\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "started_on": {
                        "description": "Start date of the Person's Job\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Title of a Person's Job\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "JobSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Job entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Job" }
                    }
                }
            },
            "KeyEmployeeChange": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of Creation\\\nField Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Entity Def Type\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * key_employee_change - Leadership Hire\n"
                    },
                    "identifier": {
                        "description": "Field Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "$ref": "#/components/schemas/EntityIdentifier"
                    },
                    "key_event_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date when the news article was posted\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "organization_identifier": {
                        "description": "Organization that had a leadership hire mentioned\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time of Updated\\\nField Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "UUID\\\nField Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "KeyEmployeeChangeSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Key Employee Change entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeyEmployeeChange"
                        }
                    }
                }
            },
            "Layoff": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Laoyff entity creation date\\\nField Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Layoff Signal\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * layoff - layoff\n"
                    },
                    "identifier": {
                        "description": "Field Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "$ref": "#/components/schemas/EntityIdentifier"
                    },
                    "key_event_date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date when the news article was posted\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "organization_identifier": {
                        "description": "Organization that had a layoff mentioned\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Entity Updating date\\\nField Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Entity UUID\\\nField Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "LayoffSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Layoff entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Layoff" }
                    }
                }
            },
            "Address": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "country_code": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Country Code\\\nField Type: text_exact\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * address - Address\n"
                    },
                    "headquartered_organization_identifier": {
                        "description": "Identifier of the organization that's headquartered on this address\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "identifier": {
                        "description": "Descriptive name of the Address (e.g. Headquarters, London Office)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "location_identifiers": {
                        "type": "array",
                        "description": "What city the address is located in (e.g. San Francisco, London, Kiev).\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Descriptive name of the Address (e.g. Headquarters, London Office)\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "postal_code": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The postal code of the address\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "region_code": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Region Code\\\nField Type: text_exact\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    },
                    "street_1": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The street address of the location\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "street_2": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The street address of the location\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "AddressSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Address entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Address" }
                    }
                }
            },
            "Degree": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "completed_on": {
                        "description": "Date when the degree is completed\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * degree - Degree\n"
                    },
                    "identifier": {
                        "description": "Name of the Degree\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "person_identifier": {
                        "description": "The Person that received the Degree\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "school_identifier": {
                        "description": "The School that awarded the Degree\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "started_on": {
                        "description": "Date when the degree is started\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "subject": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The subject or major that the person focused his/her degree on\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "type_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The type of degree that the person received\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    }
                }
            },
            "DegreeSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Degree entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Degree" }
                    }
                }
            },
            "Principal": {
                "type": "object",
                "required": ["identifier"],
                "properties": {
                    "aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "Field Type: text_short_multi\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "born_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Field Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "categories": {
                        "type": "array",
                        "description": "Descriptive keyword for an Organization (e.g. SaaS, Android, Cloud Computing, Medical Device)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "category_groups": {
                        "type": "array",
                        "description": "Superset of Industries (e.g. Software, Mobile, Health Care)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "closed_on": {
                        "description": "The date when the organization is closed\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "company_type": {
                        "type": "string",
                        "description": "Whether an Organization is for profit or non-profit\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * for_profit - For Profit\n * non_profit - Non-profit\n"
                    },
                    "contact_email": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "General contact email for the organization or person\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "delisted_on": {
                        "description": "The date when the Organization removed its stock from the stock exchange.\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Organization or Person Description, Industries, Industry Groups\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "died_on": {
                        "type": "string",
                        "format": "date",
                        "description": "Field Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "diversity_spotlights": {
                        "type": "array",
                        "description": "Types of diversity represented in an organization, specifically of those who are founding members, currently the CEO, or have check-writing abilities in an investment firm. This feature is in beta and may change with future updates.\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "entity_def_id": {
                        "type": "string",
                        "description": "Field Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * organization - Organization\n * person - Person\n"
                    },
                    "equity_funding_total": {
                        "description": "Total funding amount raised across all Funding Rounds excluding debt\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "exited_on": {
                        "description": "Date the organization was acquired or went public\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "facebook": {
                        "description": "Link to organization/person's Facebook page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "facet_ids": {
                        "type": "array",
                        "description": "Field Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* company - Company\n* investor - Investor\n* school - School\n"
                        }
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "First name of a Person\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "founded_on": {
                        "description": "Date the Organization was founded\\\nField Type: date_precision\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/DateWithPrecision" }
                        ]
                    },
                    "founder_identifiers": {
                        "type": "array",
                        "description": "Founders of the organization\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "funding_stage": {
                        "type": "string",
                        "description": "This field describes an organization's most recent funding status (e.g. Early Stage Venture, Late Stage Venture, M&A)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * early_stage_venture - Early Stage Venture\n * ipo - IPO\n * late_stage_venture - Late Stage Venture\n * m_and_a - M&A\n * private_equity - Private Equity\n * seed - Seed\n"
                    },
                    "funding_total": {
                        "description": "Total funding amount raised across all Funding Rounds\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "gender": {
                        "type": "string",
                        "description": "A Person's gender\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * agender - Agender\n * androgyne - Androgyne\n * androgynous - Androgynous\n * bigender - Bigender\n * female - Female\n * ftm - Female to Male (FTM)\n * gender_fluid - Gender Fluid\n * gender_nonconforming - Gender Nonconforming\n * gender_questioning - Gender Questioning\n * gender_variant - Gender Variant\n * genderqueer - Genderqueer\n * male - Male\n * mtf - Male to Female (MTF)\n * neutrois - Neutrois\n * non_binary - Non-Binary\n * not_provided - Prefer not to identify\n * other - Other\n * pangender - Pangender\n * transfeminine - Transfeminine\n * transgender_female - Transgender Female\n * transgender_male - Transgender Male\n * transgender_man - Transgender Man\n * transgender_person - Transgender Person\n * transgender_woman - Transgender Woman\n * transmasculine - Transmasculine\n * transsexual_female - Transsexual Female\n * transsexual_male - Transsexual Male\n * transsexual_man - Transsexual Man\n * transsexual_person - Transsexual Person\n * transsexual_woman - Transsexual Woman\n * two_spirit - Two-Spirit\n"
                    },
                    "hub_tags": {
                        "type": "array",
                        "description": "Tags representing special attributes of organizations that are used in Hubs\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* cbvp - Crunchbase Venture Program\n* emerging_unicorn - Emerging Unicorn\n* exited_unicorn - Exited Unicorn\n* pledge_one_percent - Pledge 1%\n* unicorn - Unicorn\n"
                        }
                    },
                    "identifier": {
                        "description": "Name of the Organization or Person\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "image_id": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: image_id\\\nSearchable: No\n"
                    },
                    "image_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "The cloudinary url of the profile image\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "investor_identifiers": {
                        "type": "array",
                        "description": "The top 5 investors with investments in this company, ordered by Crunchbase Rank\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "investor_stage": {
                        "type": "array",
                        "description": "This describes the stage of investor this organization or person is (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* convertible_note - Convertible Note\n* crowdfunding - Crowdfunding\n* debt - Debt\n* early_stage_venture - Early Stage Venture\n* grant - Grant\n* initial_coin_offering - Initial Coin Offering\n* late_stage_venture - Late Stage Venture\n* non_equity_assistance - Non Equity Assistance\n* post_ipo - Post-Ipo\n* private_equity - Private Equity\n* secondary_market - Secondary Market\n* seed - Seed\n* venture - Venture\n"
                        }
                    },
                    "investor_type": {
                        "type": "array",
                        "description": "This describes the type of investor this organization or person is (e.g. Angel, Fund of Funds, Venture Capital)\\\nField Type: enum_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "type": "string",
                            "description": "Possible values are:\n* accelerator - Accelerator\n* angel - Individual/Angel\n* angel_group - Angel Group\n* co_working_space - Co-Working Space\n* corporate_venture_capital - Corporate Venture Capital\n* entrepreneurship_program - Entrepreneurship Program\n* family_investment_office - Family Investment Office\n* fund_of_funds - Fund Of Funds\n* government_office - Government Office\n* hedge_fund - Hedge Fund\n* incubator - Incubator\n* investment_bank - Investment Bank\n* investment_partner - Investment Partner\n* micro_vc - Micro VC\n* pension_funds - Pension Funds\n* private_equity_firm - Private Equity Firm\n* secondary_purchaser - Secondary Purchaser\n* startup_competition - Startup Competition\n* syndicate - Syndicate\n* university_program - University Program\n* venture_capital - Venture Capital\n* venture_debt - Venture Debt\n"
                        }
                    },
                    "ipo_status": {
                        "type": "string",
                        "description": "The current public status of the Organization\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * delisted - Delisted\n * private - Private\n * public - Public\n"
                    },
                    "last_equity_funding_total": {
                        "description": "Amount of most recent Funding Round excluding debt\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "last_equity_funding_type": {
                        "type": "string",
                        "description": "The most recent Funding Round excluding debt\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * angel - Angel\n * convertible_note - Convertible Note\n * corporate_round - Corporate Round\n * debt_financing - Debt Financing\n * equity_crowdfunding - Equity Crowdfunding\n * grant - Grant\n * initial_coin_offering - Initial Coin Offering\n * non_equity_assistance - Non-equity Assistance\n * post_ipo_debt - Post-IPO Debt\n * post_ipo_equity - Post-IPO Equity\n * post_ipo_secondary - Post-IPO Secondary\n * pre_seed - Pre-Seed\n * private_equity - Private Equity\n * product_crowdfunding - Product Crowdfunding\n * secondary_market - Secondary Market\n * seed - Seed\n * series_a - Series A\n * series_b - Series B\n * series_c - Series C\n * series_d - Series D\n * series_e - Series E\n * series_f - Series F\n * series_g - Series G\n * series_h - Series H\n * series_i - Series I\n * series_j - Series J\n * series_unknown - Venture - Series Unknown\n * undisclosed - Undisclosed\n"
                    },
                    "last_funding_at": {
                        "type": "string",
                        "format": "date",
                        "description": "Date of most recent Funding Round\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "last_funding_total": {
                        "description": "Amount of most recent Funding Round\\\nField Type: money\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n",
                        "allOf": [{ "$ref": "#/components/schemas/Money" }]
                    },
                    "last_funding_type": {
                        "type": "string",
                        "description": "Last funding round type (e.g. Series A, Seed, Private Equity)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * angel - Angel\n * convertible_note - Convertible Note\n * corporate_round - Corporate Round\n * debt_financing - Debt Financing\n * equity_crowdfunding - Equity Crowdfunding\n * grant - Grant\n * initial_coin_offering - Initial Coin Offering\n * non_equity_assistance - Non-equity Assistance\n * post_ipo_debt - Post-IPO Debt\n * post_ipo_equity - Post-IPO Equity\n * post_ipo_secondary - Post-IPO Secondary\n * pre_seed - Pre-Seed\n * private_equity - Private Equity\n * product_crowdfunding - Product Crowdfunding\n * secondary_market - Secondary Market\n * seed - Seed\n * series_a - Series A\n * series_b - Series B\n * series_c - Series C\n * series_d - Series D\n * series_e - Series E\n * series_f - Series F\n * series_g - Series G\n * series_h - Series H\n * series_i - Series I\n * series_j - Series J\n * series_unknown - Venture - Series Unknown\n * undisclosed - Undisclosed\n"
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Last name of a Person\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "layout_id": { "type": "string" },
                    "linkedin": {
                        "description": "Link to organization/person's LinkedIn page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "location_group_identifiers": {
                        "type": "array",
                        "description": "Where the principal is located (e.g. San Francisco Bay Area, Silicon Valley)\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/EntityIdentifier"
                        }
                    },
                    "location_identifiers": {
                        "type": "array",
                        "description": "Where the organization is headquartered\\\nField Type: identifier_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": {
                            "$ref": "#/components/schemas/LocationIdentifier"
                        }
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Field Type: text_blob\\\nSearchable: No\n"
                    },
                    "num_alumni": {
                        "type": "number",
                        "description": "Total number of alumni\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_articles": {
                        "type": "number",
                        "description": "Number of news articles that reference the Organization\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_diversity_spotlight_investments": {
                        "type": "number",
                        "description": "Total number of diversity investments made by an investor\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_employees_enum": {
                        "type": "string",
                        "description": "Total number of Employees\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * c_00001_00010 - 1-10\n * c_00011_00050 - 11-50\n * c_00051_00100 - 51-100\n * c_00101_00250 - 101-250\n * c_00251_00500 - 251-500\n * c_00501_01000 - 501-1000\n * c_01001_05000 - 1001-5000\n * c_05001_10000 - 5001-10000\n * c_10001_max - 10001+\n"
                    },
                    "num_enrollments": {
                        "type": "string",
                        "description": "Total number of Enrollments\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * c_00001_00010 - 1-10\n * c_00011_00050 - 11-50\n * c_00051_00100 - 51-100\n * c_00101_00250 - 101-250\n * c_00251_00500 - 251-500\n * c_00501_01000 - 501-1000\n * c_01001_05000 - 1001-5000\n * c_05001_10000 - 5001-10000\n * c_10001_max - 10001+\n"
                    },
                    "num_event_appearances": {
                        "type": "number",
                        "description": "Total number of events An Organization or Person appeared in\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_exits": {
                        "type": "number",
                        "description": "Total number of Exits\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_exits_ipo": {
                        "type": "number",
                        "description": "Total number of Exits (IPO)\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_founded_organizations": {
                        "type": "number",
                        "description": "Number of Organizations that the Person founded\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_founders": {
                        "type": "number",
                        "description": "Total number of Founders\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_funding_rounds": {
                        "type": "number",
                        "description": "Total number of Funding Rounds\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_funds": {
                        "type": "number",
                        "description": "Field Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_investments": {
                        "type": "number",
                        "description": "Total number of Investments made\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_investors": {
                        "type": "number",
                        "description": "Total number of investment firms and individual investors\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_jobs": {
                        "type": "number",
                        "description": "Field Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_lead_investments": {
                        "type": "number",
                        "description": "Number of Investments led by the Person\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_lead_investors": {
                        "type": "number",
                        "description": "Total number of lead investment firms and individual investors\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_partner_investments": {
                        "type": "number",
                        "description": "Number of Investments the Individual has partnered in\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "num_portfolio_organizations": {
                        "type": "number",
                        "description": "Total number of portfolio organizations\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "operating_status": {
                        "type": "string",
                        "description": "Operating Status of Organization e.g. Active, Closed\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * active - Active\n * closed - Closed\n"
                    },
                    "permalink": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "Field Type: permalink\\\nSearchable: No\n"
                    },
                    "permalink_aliases": {
                        "type": "array",
                        "maxItems": 255,
                        "description": "Field Type: text_exact_multi\\\nSearchable: Yes\\\nSearch Operators: blank, includes, includes_all, not_includes, not_includes_all\n",
                        "items": { "type": "string", "maxLength": 255 }
                    },
                    "phone_number": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "General phone number of the organization or person\\\nField Type: text_blob\\\nSearchable: No\n"
                    },
                    "primary_job_title": {
                        "type": "string",
                        "maxLength": 255,
                        "description": "The person's primary job title (e.g. CEO, Chief Architect, Product Manager)\\\nField Type: text_short\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, not_contains, not_eq, starts\n"
                    },
                    "primary_organization": {
                        "description": "The organization associated to the person's primary job\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "program_application_deadline": {
                        "type": "string",
                        "format": "date",
                        "description": "The deadline for applying to the Accelerator Program\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "program_duration": {
                        "type": "number",
                        "description": "The duration of the Acceleration Program in number of weeks\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "program_type": {
                        "type": "string",
                        "description": "The type of Accelerator Program (e.g. On-Site, Online)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * on_site - On-Site\n * online - Online\n"
                    },
                    "rank_delta_d30": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 30 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_delta_d7": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 7 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_delta_d90": {
                        "type": "number",
                        "format": "double",
                        "description": "Movement in Rank over the last 90 days using a score from -10 to 10\\\nField Type: decimal\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "rank_principal": {
                        "type": "number",
                        "description": "Algorithmic rank assigned to the top 100,000 most active Organizations and People\\\nField Type: integer\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gt, gte, lt, lte, not_eq\n"
                    },
                    "revenue_range": {
                        "type": "string",
                        "description": "Estimated Revenue Range for Organizations\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * r_00000000 - Less than $1M\n * r_00001000 - $1M to $10M\n * r_00010000 - $10M to $50M\n * r_00050000 - $50M to $100M\n * r_00100000 - $100M to $500M\n * r_00500000 - $500M to $1B\n * r_01000000 - $1B to $10B\n * r_10000000 - $10B+\n"
                    },
                    "school_method": {
                        "type": "string",
                        "description": "The type of School Method (e.g. On Campus, Online)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * on_compus - On Campus\n * online - Online\n * online_and_on_campus - Online and On Campus\n"
                    },
                    "school_program": {
                        "type": "string",
                        "description": "The type of School Program (e.g. Bootcamp, Four Year University)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * bootcamp - Bootcamp\n * community_college - Community College\n * four_year_university - Four Year University\n * graduate_university - Graduate University\n * high_school - High School\n * trade_school - Trade School\n * two_year_university - Two Year University\n"
                    },
                    "school_type": {
                        "type": "string",
                        "description": "The type of School (e.g. Public, Private)\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * for_profit_private - Private\n * non_profit_private - Private (Non-Profit)\n * public - Public\n"
                    },
                    "short_description": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Text of Organization or Person Description, Industries, and Industry Groups\\\nField Type: text_long\\\nSearchable: Yes\\\nSearch Operators: blank, contains, not_contains\n"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of Organization e.g. Operating, Closed, Acquired, IPO\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * closed - Closed\n * ipo - IPO\n * operating - Operating\n * was_acquired - Was Acquired\n"
                    },
                    "stock_exchange_symbol": {
                        "type": "string",
                        "description": "Stock exchange where the Organization is listed e.g. NYSE, NASDAQ\\\nField Type: enum\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\\\nPossible values are:\n * adx - ADX - Abu Dhabi Securities Exchange\n * afx - AFX - Afghanistan Stock Exchange\n * altx - ALTX - ALTX East Africa Exchange\n * amex - AMEX - American Stock Exchange\n * ams - AMS - Euronext Amsterdam\n * amx - AMX - Armenia Securities Exchange\n * asce - ASCE - Abuja Securities and Commodities Exchange\n * asx - ASX - Australian Securities Exchange\n * ath - ATH - Athens Stock Exchange\n * bcba - BCBA - Buenos Aires Stock Exchange\n * bdp - BDP - Budapest Stock Exchange\n * belex - BELEX - Belgrade Stock Exchange\n * ber - BER - Berliner Börse\n * bfb - BFB - Baku Stock Exchange\n * bit - BIT - Italian Stock Exchange\n * bkk - BKK - Thailand Stock Exchange\n * blse - BLSE - Banja Luka Stock Exchange\n * bme - BME - Madrid Stock Exchange\n * bmv - BMV - Mexican Stock Exchange\n * bom - BOM - Bombay Stock Exchange\n * brvm - BRVM - Regional Securities Exchange SA\n * bse - BSE - Bulgarian Stock Exchange\n * bse_lb - BSE - Beirut Stock Exchange\n * bsse - BSSE - Bratislava Stock Exchange\n * bsx - BSX - Bermuda Stock Exchange\n * bvb - BVB - Bucharest Stock Exchange\n * bvc - BVC - Colombian Stock Exchange\n * bvfb - BVFB - Belarusian Currency and Stock Exchange\n * bvm - BVM - Montevideo Stock Exchange\n * bvmf - B3 - Brazil Stock Exchange and OTC Market\n * bvmt - BVMT - Tunis Stock Exchange\n * bx - BX - Berne Stock Exchange\n * cas - CAS - Casablanca Stock Exchange\n * cise - CISE - Channel Islands Stock Exchange\n * cnsx - CNSX - Canadian National Stock Exchange\n * col - COL - Colombo Stock Exchange\n * cph - CPH - Copenhagen Stock Exchange\n * cse - CSE - Canadian Securities Exchange\n * cse_cy - CSE - Cyprus Stock Exchange\n * csx - CSX - Cambodia Securities Exchange\n * cve - TSX-V - Toronto TSX Venture Exchange\n * dfm - DFM - Dubai Financial Market\n * dse - DSE - Dhaka Stock Exchange\n * dsx - DSX - Douala Stock Exchange\n * dus - DUS - Börse Düsseldorf\n * ebr - EBR - Euronext Brussels\n * egx - EGX - Egypt Stock Exchange\n * eli - ELI - Euronext Lisbon\n * epa - EPA - Euronext Paris\n * etr - ETR - Deutsche Börse XETRA\n * eurex - EUREX - Eurex Exchange\n * fra - FRA - Frankfurt Stock Exchange\n * fwb - FWB - Börse Frankfurt Stock Exchange\n * gha - GHA - Ghana Stock Exchange\n * gsx - GSX - Georgian Stock Exchange\n * gsx_gi - GSX - Gibraltar Stock Exchange\n * hel - HEL - Helsinki Stock Exchange\n * hkg - HKG - Hong Kong Stock Exchange\n * hnx - HNX - Hanoi Stock Exchange\n * hose - HOSE - Ho Chi Minh Stock Exchange\n * ice - ICE - Iceland Stock Exchange\n * idx - IDX - Indonesia Stock Exchange\n * iex - IEX - Investors Exchange\n * ifb - IFB - Iran Fara Bourse\n * ime - IME - Iran Mercantile Exchange\n * irenex - IRENEX - Iran Energy Exchange\n * ise - ISE - Irish Stock Exchange\n * ist - IST - Istanbul Stock Exchange\n * isx - ISX - Iraq Stock Exchange\n * jp - JP - Japan Exchange\n * jsc - JSC - Belarusian Currency and Stock Exchange\n * jse - JSE - Johannesburg Stock Exchange\n * jse_jam - JSE - Jamaica Stock Exchange\n * kase - KASE - Kazakhstan Stock Exchange\n * klse - KLSE - Malaysia Stock Exchange\n * kosdaq - KOSDAQ - Korean Securities Dealers Automated Quotations\n * krx - KRX - Korea Stock Exchange\n * kse - KSE - Kuwait Stock Exchange\n * lje - LJE - Ljubljana Stock Exchange\n * lse - LSE - London Stock Exchange\n * lsm - LSM - Libyan Stock Market\n * lsx - LSX - Lao Securities Exchange\n * luse - LuSE - Lusaka Securities Exchange\n * luxse - LuxSE - Luxembourg Stock Exchange\n * mal - MAL - Malta Stock Exchange\n * mcx - MCX - Multi Commodity Exchange of India\n * meff - MEFF - Mercado Spanish Financial Futures Market\n * mnse - MNSE - Montenegro Stock Exchange\n * moex - MOEX - Moscow Exchange\n * mse - MSE - Metropolitan Stock Exchange\n * mse_md - MSE - Moldova Stock Exchange\n * mse_mk - MSE - Macedonian Stock Exchange\n * msei - MSEI - Metropolitan Stock Exchange of India\n * msm - MSM - Muscat Securities Market\n * mun - MUN - Börse München\n * nasdaq - NASDAQ\n * nbo - NSE - Nairobi Securities Exchange\n * neeq - NEEQ - National Equities Exchange and Quotations\n * nepse - NEPSE - Nepal Stock Exchange\n * nex - NEX - NEX Exchange\n * ngm - NGM - Nordic Growth Market Exchange\n * nig - NIG - Nigerian Stock Exchange\n * notc - NOTC - Norwegian OTC\n * npex - NPEX - NPEX Stock Exchange\n * nse - NSE - National Stock Exchange of India\n * nsx - NSX - National Stock Exchange of Australia\n * nyse - NYSE - New York Stock Exchange\n * nysearca - NYSEARCA - NYSE Arca\n * nysemkt - NYSEAMERICAN - NYSE American\n * nze - NZE - New Zealand Stock Exchange\n * ose - OSE - Oslo Stock Exchange\n * otcbb - OTCBB - FINRA OTC Bulletin Board\n * otcpink - OTC Pink\n * otcqb - OTCQB\n * otcqx - OTCQX\n * pdex - PDEx - Philippine Dealing Exchange\n * pex - PEX - Palestine Exchange\n * pfts - PFTS - PFTS Ukraine Stock Exchange\n * pomsox - POMSoX - Port Moresby Stock Exchange\n * prg - PRA - Prague Stock Exchange\n * pse - PSE - Philippine Stock Exchange\n * psx - PSX - Pakistan Stock Exchange\n * qse - QSE - Qatar Stock Exchange\n * rfb - RFB - Riga Stock Exchange\n * rse - RSE - Rwanda Stock Exchange\n * rsebl - RSEBL - Royal Securities Exchange of Bhutan\n * sase - SASE - Sarajevo Stock Exchange\n * sbx - SBX - BX Swiss\n * sehk - SEHK - The Stock Exchange of Hong Kong\n * sem - SEM - Stock Exchange of Mauritius\n * sgbv - SGBV - Algiers Stock Exchange\n * sgx - SGX - Singapore Stock Exchange\n * six - SIX - SIX Swiss Exchange\n * spbex - SPBEX - Saint Petersburg Stock Exchange\n * spse - SPSE - South Pacific Stock Exchange\n * sse - SSE - Shanghai Stock Exchange\n * ssx - SSX - Sydney Stock Exchange\n * sto - STO - Stockholm Stock Exchange\n * stu - STU - Börse Stuttgart\n * swx - SWX - SIX Swiss Exchange\n * szse - SZSE - Shenzhen Stock Exchange\n * tadawul - Tadawul - Saudi Stock Exchange\n * tal - TSE - Tallinn Stock Exchange\n * tfex - TFEX - Thailand Futures Exchange\n * tise - TISE - The International Stock Exchange\n * tlv - TLV - Tel Aviv Stock Exchange\n * tpe - TWSE - Taiwan Stock Exchange\n * tse_al - TSE - Tirana Stock Exchange\n * tse_ir - TSE - Tehran Stock Exchange\n * tsec - TWO - Taiwan OTC Exchange\n * tsx - TSX - Toronto Stock Exchange\n * ttse - TTSE - Trinidad and Tobago Stock Exchange\n * tyo - TYO - Tokyo Stock Exchange\n * use - USE - Uganda Securities Exchange\n * ux - UX - Ukrainian Exchange\n * vie - VIE - Vienna Stock Exchange\n * vmf - VMF - Faroese Securities Market\n * vse - VSE - Vancouver Stock Exchange\n * wse - WSE - Warsaw Stock Exchange\n * ysx - YSX - Yangon Stock Exchange\n * zamace - ZAMACE - Zambian Commodity Exchange\n * zse - ZSE - Zimbabwe Stock Exchange\n * zse_hr - ZSE - Zagreb Stock Exchange\n"
                    },
                    "stock_symbol": {
                        "description": "Stock ticker symbol (e.g. AAPL, FB, TWTR)\\\nField Type: identifier\\\nSearchable: Yes\\\nSearch Operators: blank, contains, eq, includes, not_contains, not_eq, not_includes, starts\n",
                        "allOf": [
                            { "$ref": "#/components/schemas/EntityIdentifier" }
                        ]
                    },
                    "twitter": {
                        "description": "Link to organization/person's Twitter page\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Field Type: datetime\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    },
                    "uuid": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Field Type: uuid\\\nSearchable: Yes\\\nSearch Operators: blank, eq, includes, not_eq, not_includes\n"
                    },
                    "website": {
                        "description": "Link to homepage. note: website_url has replaced this field; this field will be deprecated in the near future\\\nField Type: link\\\nSearchable: No\n",
                        "allOf": [{ "$ref": "#/components/schemas/Link" }]
                    },
                    "website_url": {
                        "type": "string",
                        "maxLength": 8192,
                        "description": "Link to homepage\\\nField Type: url\\\nSearchable: Yes\\\nSearch Operators: domain_blank, domain_eq, domain_includes, not_domain_eq, not_domain_includes\n"
                    },
                    "went_public_on": {
                        "type": "string",
                        "format": "date",
                        "description": "The date when the Organization went public\\\nField Type: date\\\nSearchable: Yes\\\nSearch Operators: between, blank, eq, gte, lte\n"
                    }
                }
            },
            "PrincipalSearchResults": {
                "type": "object",
                "properties": {
                    "count": {
                        "description": "Total number of Principal entities",
                        "type": "integer"
                    },
                    "entities": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/Principal" }
                    }
                }
            },
            "OrganizationEntity": {
                "type": "object",
                "properties": {
                    "properties": {
                        "$ref": "#/components/schemas/Organization"
                    },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "acquiree_acquisitions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Acquisition"
                                },
                                "maxItems": 100
                            },
                            "acquirer_acquisitions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Acquisition"
                                },
                                "maxItems": 100
                            },
                            "child_organizations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "child_ownerships": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ownership"
                                },
                                "maxItems": 100
                            },
                            "event_appearances": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EventAppearance"
                                },
                                "maxItems": 100
                            },
                            "fields": {
                                "$ref": "#/components/schemas/Organization"
                            },
                            "founders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                },
                                "maxItems": 100
                            },
                            "headquarters_address": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                },
                                "maxItems": 100
                            },
                            "investors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "ipos": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/Ipo" },
                                "maxItems": 100
                            },
                            "jobs": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/Job" },
                                "maxItems": 100
                            },
                            "key_employee_changes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/KeyEmployeeChange"
                                },
                                "maxItems": 100
                            },
                            "layoffs": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Layoff"
                                },
                                "maxItems": 100
                            },
                            "parent_organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "parent_ownership": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Ownership"
                                },
                                "maxItems": 100
                            },
                            "participated_funding_rounds": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FundingRound"
                                },
                                "maxItems": 100
                            },
                            "participated_funds": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fund"
                                },
                                "maxItems": 100
                            },
                            "participated_investments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Investment"
                                },
                                "maxItems": 100
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            },
                            "raised_funding_rounds": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FundingRound"
                                },
                                "maxItems": 100
                            },
                            "raised_funds": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fund"
                                },
                                "maxItems": 100
                            },
                            "raised_investments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Investment"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "PersonEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Person" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "degrees": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Degree"
                                },
                                "maxItems": 100
                            },
                            "event_appearances": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EventAppearance"
                                },
                                "maxItems": 100
                            },
                            "fields": { "$ref": "#/components/schemas/Person" },
                            "founded_organizations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "jobs": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/Job" },
                                "maxItems": 100
                            },
                            "participated_funding_rounds": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FundingRound"
                                },
                                "maxItems": 100
                            },
                            "participated_funds": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Fund"
                                },
                                "maxItems": 100
                            },
                            "participated_investments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Investment"
                                },
                                "maxItems": 100
                            },
                            "partner_funding_rounds": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FundingRound"
                                },
                                "maxItems": 100
                            },
                            "partner_investments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Investment"
                                },
                                "maxItems": 100
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            },
                            "primary_job": {
                                "type": "array",
                                "items": { "$ref": "#/components/schemas/Job" },
                                "maxItems": 100
                            },
                            "primary_organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "FundingRoundEntity": {
                "type": "object",
                "properties": {
                    "properties": {
                        "$ref": "#/components/schemas/FundingRound"
                    },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": {
                                "$ref": "#/components/schemas/FundingRound"
                            },
                            "investments": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Investment"
                                },
                                "maxItems": 100
                            },
                            "investors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "lead_investors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "partners": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                },
                                "maxItems": 100
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "AcquisitionEntity": {
                "type": "object",
                "properties": {
                    "properties": {
                        "$ref": "#/components/schemas/Acquisition"
                    },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "acquiree_organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "acquirer_organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "fields": {
                                "$ref": "#/components/schemas/Acquisition"
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "InvestmentEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Investment" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": {
                                "$ref": "#/components/schemas/Investment"
                            },
                            "funding_round": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/FundingRound"
                                },
                                "maxItems": 100
                            },
                            "investor": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "partner": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "EventEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Event" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Address"
                                },
                                "maxItems": 100
                            },
                            "appearances": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/EventAppearance"
                                },
                                "maxItems": 100
                            },
                            "contestants": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "exhibitors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "fields": { "$ref": "#/components/schemas/Event" },
                            "organizers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            },
                            "speakers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "sponsors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "PressReferenceEntity": {
                "type": "object",
                "properties": {
                    "properties": {
                        "$ref": "#/components/schemas/PressReference"
                    },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": {
                                "$ref": "#/components/schemas/PressReference"
                            }
                        }
                    }
                }
            },
            "FundEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Fund" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": { "$ref": "#/components/schemas/Fund" },
                            "investors": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            },
                            "owner": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "EventAppearanceEntity": {
                "type": "object",
                "properties": {
                    "properties": {
                        "$ref": "#/components/schemas/EventAppearance"
                    },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "event": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event"
                                },
                                "maxItems": 100
                            },
                            "fields": {
                                "$ref": "#/components/schemas/EventAppearance"
                            },
                            "participant": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Principal"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "IpoEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Ipo" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": { "$ref": "#/components/schemas/Ipo" },
                            "organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "OwnershipEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Ownership" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "child_organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "fields": {
                                "$ref": "#/components/schemas/Ownership"
                            },
                            "parent_organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "press_references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/PressReference"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "CategoryEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Category" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": {
                                "$ref": "#/components/schemas/Category"
                            }
                        }
                    }
                }
            },
            "CategoryGroupEntity": {
                "type": "object",
                "properties": {
                    "properties": {
                        "$ref": "#/components/schemas/CategoryGroup"
                    },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": {
                                "$ref": "#/components/schemas/CategoryGroup"
                            }
                        }
                    }
                }
            },
            "LocationEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Location" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": {
                                "$ref": "#/components/schemas/Location"
                            }
                        }
                    }
                }
            },
            "JobEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Job" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": { "$ref": "#/components/schemas/Job" },
                            "organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "person": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "AddressEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Address" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "event": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Event"
                                },
                                "maxItems": 100
                            },
                            "fields": {
                                "$ref": "#/components/schemas/Address"
                            },
                            "organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            },
            "DegreeEntity": {
                "type": "object",
                "properties": {
                    "properties": { "$ref": "#/components/schemas/Degree" },
                    "cards": {
                        "type": "object",
                        "properties": {
                            "fields": { "$ref": "#/components/schemas/Degree" },
                            "organization": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Organization"
                                },
                                "maxItems": 100
                            },
                            "person": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Person"
                                },
                                "maxItems": 100
                            }
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "ApiKeyAuthHeader": {
                "type": "apiKey",
                "name": "X-cb-user-key",
                "in": "header"
            }
        }
    }
}
